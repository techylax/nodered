[
    {
        "id": "016a8a703bd64d79",
        "type": "tab",
        "label": "1CH051",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "908514b9df30460d",
        "type": "tab",
        "label": "1CH052",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aac053d077e51096",
        "type": "tab",
        "label": "Machine Selection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d440ce3753a1d478",
        "type": "subflow",
        "name": "Subflow 3",
        "info": "",
        "in": [
            {
                "x": 220,
                "y": 160,
                "wires": [
                    {
                        "id": "2cc6354628921b83"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 140,
                "wires": [
                    {
                        "id": "dbf2fc9d6649fdf6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1020,
                "y": 180,
                "wires": [
                    {
                        "id": "bea3f0913778777c",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "73c9668643fa63b3",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 140,
                "wires": [
                    {
                        "id": "03e9313b9b07f67d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 60,
                "wires": [
                    {
                        "id": "d2226ef0b6c0f121",
                        "port": 0
                    }
                ]
            },
            {
                "x": 540,
                "y": 160,
                "wires": [
                    {
                        "id": "d2226ef0b6c0f121",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ba7038a52b6c04be",
        "type": "subflow",
        "name": "Confirm Badge + Notif",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 80,
                "wires": [
                    {
                        "id": "fa9681befd56a2ae"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 240,
                "wires": [
                    {
                        "id": "73e74e9bcd85c221",
                        "port": 0
                    }
                ]
            },
            {
                "x": 940,
                "y": 300,
                "wires": [
                    {
                        "id": "9e50d6d09847c57b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "flow.Pass"
        ],
        "outputLabels": [
            "Continue to UI",
            "Invalid Badge"
        ]
    },
    {
        "id": "c59719cd71299db1",
        "type": "subflow",
        "name": "Confirm Msg",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "8ee6be296e8b7ea2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 40,
                "wires": [
                    {
                        "id": "c6e8bd0abc60d4a3",
                        "port": 0
                    }
                ]
            },
            {
                "x": 660,
                "y": 100,
                "wires": [
                    {
                        "id": "c6e8bd0abc60d4a3",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bbe714a9c896ce77",
        "type": "junction",
        "z": "016a8a703bd64d79",
        "x": 480,
        "y": 1560,
        "wires": [
            [
                "66fb3a2b28908b27",
                "58ffe12315e4f8fa",
                "fc3a9aad9bd32289"
            ]
        ]
    },
    {
        "id": "8233dca47a860d58",
        "type": "junction",
        "z": "908514b9df30460d",
        "x": 480,
        "y": 1560,
        "wires": [
            [
                "3f52f8b328fc18c5",
                "70c20c2add03e2f5",
                "c70f3edcb1e5a6a8"
            ]
        ]
    },
    {
        "id": "c972463ea6a1214d",
        "type": "ui_spacer",
        "z": "016a8a703bd64d79",
        "name": "spacer",
        "group": "bf1de1d8fbee778b",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "dcb797ed5385b4ea",
        "type": "ui_spacer",
        "z": "016a8a703bd64d79",
        "name": "spacer",
        "group": "bf1de1d8fbee778b",
        "order": 6,
        "width": 12,
        "height": 1
    },
    {
        "id": "393814bdb3e50e72",
        "type": "ui_spacer",
        "z": "016a8a703bd64d79",
        "name": "spacer",
        "group": "c76d0571a1bb5544",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "a29cf195d970aea1",
        "type": "ui_group",
        "name": "MachineSchedule",
        "tab": "47a022ef35d163e8",
        "order": 6,
        "disp": true,
        "width": "14",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3c75836e726232e4",
        "type": "ui_group",
        "name": "WORunning",
        "tab": "47a022ef35d163e8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75bb91cb38139669",
        "type": "OPCUA-IIoT-Connector",
        "discoveryUrl": "",
        "endpoint": "opc.tcp://10.9.0.231:4840",
        "endpointMustExist": false,
        "keepSessionAlive": true,
        "loginEnabled": false,
        "name": "MMS Waterford",
        "showErrors": true,
        "securityPolicy": "None",
        "securityMode": "None",
        "individualCerts": false,
        "publicCertificateFile": "",
        "privateKeyFile": "",
        "defaultSecureTokenLifetime": "",
        "autoSelectRightEndpoint": false,
        "strategyMaxRetry": "",
        "strategyInitialDelay": "",
        "strategyMaxDelay": "",
        "strategyRandomisationFactor": "",
        "requestedSessionTimeout": "",
        "connectionStartDelay": "",
        "reconnectDelay": "",
        "maxBadSessionRequests": "10"
    },
    {
        "id": "06aae9471921be4e",
        "type": "mqtt-broker",
        "name": "(Local) MQTT Broker",
        "broker": "dmfgdev-eg.pemnet.com",
        "port": "1884",
        "clientid": "nodered-hmi",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "75c0ef918dcab1ab",
        "type": "ui_group",
        "name": "Machine",
        "tab": "47a022ef35d163e8",
        "order": 7,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": "body {   font-size: 100%; }"
    },
    {
        "id": "dde01a19eea3117b",
        "type": "ui_group",
        "name": "Checklist",
        "tab": "47a022ef35d163e8",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bf1de1d8fbee778b",
        "type": "ui_group",
        "name": "MENU",
        "tab": "47a022ef35d163e8",
        "order": 1,
        "disp": false,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a091f834dadec4dc",
        "type": "ui_group",
        "name": "DownTime",
        "tab": "47a022ef35d163e8",
        "order": 10,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c76d0571a1bb5544",
        "type": "ui_group",
        "name": "Pin",
        "tab": "47a022ef35d163e8",
        "order": 3,
        "disp": false,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "56da9086b4c2e3c3",
        "type": "ui_group",
        "name": "DSI",
        "tab": "47a022ef35d163e8",
        "order": 2,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5b289b6f88d37c4a",
        "type": "ui_group",
        "name": "Notif",
        "tab": "47a022ef35d163e8",
        "order": 8,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "23bb5756e5c49e5b",
        "type": "ui_group",
        "name": "QC",
        "tab": "47a022ef35d163e8",
        "order": 9,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "47a022ef35d163e8",
        "type": "ui_tab",
        "name": "1CH051",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8e64f7529026eea2",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "eafabb231c5c985f",
        "type": "ui_group",
        "name": "MachineSchedule",
        "tab": "3bc5517fe8064640",
        "order": 6,
        "disp": true,
        "width": "14",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5263fb7040c01dff",
        "type": "ui_group",
        "name": "WORunning",
        "tab": "3bc5517fe8064640",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "113c3a8b49c860dd",
        "type": "ui_group",
        "name": "Machine",
        "tab": "3bc5517fe8064640",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ed958b7553b0b2b1",
        "type": "ui_group",
        "name": "Checklist",
        "tab": "3bc5517fe8064640",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a58a958ac73f6b30",
        "type": "ui_group",
        "name": "MENU",
        "tab": "3bc5517fe8064640",
        "order": 1,
        "disp": false,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "073be19344c1434a",
        "type": "ui_group",
        "name": "DownTime",
        "tab": "3bc5517fe8064640",
        "order": 10,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b495685df9a1c53",
        "type": "ui_group",
        "name": "Pin",
        "tab": "3bc5517fe8064640",
        "order": 3,
        "disp": false,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7fc0a0f3f610fe34",
        "type": "ui_group",
        "name": "DSI",
        "tab": "3bc5517fe8064640",
        "order": 2,
        "disp": false,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4476f1849a32a798",
        "type": "ui_group",
        "name": "Notif",
        "tab": "3bc5517fe8064640",
        "order": 8,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7d5813ebcf0e340",
        "type": "ui_group",
        "name": "QC",
        "tab": "3bc5517fe8064640",
        "order": 9,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3bc5517fe8064640",
        "type": "ui_tab",
        "name": "1CH052",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "01af8570d2ee242c",
        "type": "ui_group",
        "name": "Machine Selection",
        "tab": "e06f8537940d800e",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e06f8537940d800e",
        "type": "ui_tab",
        "name": "MachineSelection",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1ea34d06.1438c3",
        "type": "ui_group",
        "name": "Default",
        "tab": "5e2e41aa.9826b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "5e2e41aa.9826b",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "b09370129a7e8de1",
        "type": "ui_spacer",
        "z": "908514b9df30460d",
        "name": "spacer",
        "group": "a58a958ac73f6b30",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9f3717a58174aef2",
        "type": "ui_spacer",
        "z": "908514b9df30460d",
        "name": "spacer",
        "group": "2b495685df9a1c53",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "2cc6354628921b83",
        "type": "switch",
        "z": "d440ce3753a1d478",
        "name": "",
        "property": "payload.jde__status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "dbf2fc9d6649fdf6"
            ],
            [
                "9f191edd5a3bd307"
            ]
        ]
    },
    {
        "id": "dbf2fc9d6649fdf6",
        "type": "function",
        "z": "d440ce3753a1d478",
        "name": "function 11",
        "func": "if (msg.payload.jde__status == \"SUCCESS\") {\n  let timestamp = Date.now();\n    flow.set(\"storedData\", {\n    timestamp: timestamp,\n    data: msg.payload\n  });\n  \n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9f191edd5a3bd307",
        "type": "function",
        "z": "d440ce3753a1d478",
        "name": "function 12",
        "func": "if (msg.payload.jde__status != \"SUCCESS\") {\n  let storedData = flow.get(\"storedData\") || {};\n  storedData.failedTimestamp = Date.now();\n  flow.set(\"storedData\", storedData);\n  return {\n    error: msg.payload.jde__status,\n    payload: storedData.data\n  };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "d5032a193db19bc4"
            ]
        ]
    },
    {
        "id": "d5032a193db19bc4",
        "type": "function",
        "z": "d440ce3753a1d478",
        "name": "function 13",
        "func": "let newData = msg.payload;\nlet storedData = flow.get(\"storedData\") || {};\nlet timestamp = Date.now();\nlet combinedData = {\n  timestamp: timestamp,\n  data: newData\n};\nif (storedData.data) {\n  combinedData.storedData = storedData;\n}\nreturn {\n  payload: JSON.stringify(combinedData)\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "bea3f0913778777c"
            ]
        ]
    },
    {
        "id": "bea3f0913778777c",
        "type": "function",
        "z": "d440ce3753a1d478",
        "name": "function 17",
        "func": "msg.payload = {};\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = msg.payload;\nmsgElt.payload = flow.keys();\nvar len = msgElt.payload.length;\nvar i = 0;\nfor (i=0;i<len;i++) {\n a = msgElt.payload[i];\n msg.payload[a] = flow.get(a);\n}\nreturn [msg,null];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d2226ef0b6c0f121",
        "type": "function",
        "z": "73c9668643fa63b3",
        "name": "check",
        "func": "if (msg.payload.OrderNum == null || msg.payload.OrderNum == \"Indirect\") {\n    msg.payload = {};\n    msg.payload = \"Please select a new WO before laboring on\";\n    msg.notificationType = \"warning\";\n       msg2 = {};\n    msg2.payload = false;\n\treturn [msg, msg2];\n\t}\n else {\n    \n    msg.payload = {};\n    return msg;\n\t}\n  ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 80,
        "wires": [
            [
                "8d6546332594ed40",
                "89c582ca3335bb9f"
            ],
            []
        ]
    },
    {
        "id": "8d6546332594ed40",
        "type": "ui_toast",
        "z": "73c9668643fa63b3",
        "position": "top right",
        "displayTime": "1",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "89c582ca3335bb9f",
        "type": "function",
        "z": "73c9668643fa63b3",
        "name": "Set Labor",
        "func": "flow.set(\"Labor\",msg.payload);\nmsg.payload = {\"group\":{\"show\":[\"CH030DV_Pin\"],\"hide\":[\"CH030DV_DSI\"]}};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "0faa12c4b1cdc0dc"
            ]
        ]
    },
    {
        "id": "0faa12c4b1cdc0dc",
        "type": "ui_ui_control",
        "z": "73c9668643fa63b3",
        "name": "",
        "events": "change",
        "x": 620,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "03e9313b9b07f67d",
        "type": "switch",
        "z": "73c9668643fa63b3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "d2226ef0b6c0f121"
            ],
            []
        ]
    },
    {
        "id": "73e74e9bcd85c221",
        "type": "switch",
        "z": "ba7038a52b6c04be",
        "name": "Test Name",
        "property": "payload[\"Alpha Name\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 280,
        "wires": [
            [],
            [
                "309f8b6043b6b4cf"
            ]
        ]
    },
    {
        "id": "309f8b6043b6b4cf",
        "type": "change",
        "z": "ba7038a52b6c04be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please Enter a Valid Badge Number",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 300,
        "wires": [
            [
                "9e50d6d09847c57b"
            ]
        ]
    },
    {
        "id": "9e50d6d09847c57b",
        "type": "ui_toast",
        "z": "ba7038a52b6c04be",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Invalid Badge",
        "name": "",
        "x": 770,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fa9681befd56a2ae",
        "type": "http request",
        "z": "ba7038a52b6c04be",
        "name": "PENN_ORC_REMSTARBADGECHECK",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://dv-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORC_REMSTARBADGECHECK",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 80,
        "wires": [
            [
                "73e74e9bcd85c221",
                "0d81ede5e52b78f9"
            ]
        ]
    },
    {
        "id": "0d81ede5e52b78f9",
        "type": "debug",
        "z": "ba7038a52b6c04be",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "c6e8bd0abc60d4a3",
        "type": "switch",
        "z": "c59719cd71299db1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "No",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 80,
        "wires": [
            [],
            []
        ],
        "outputLabels": [
            "Yes",
            "No"
        ]
    },
    {
        "id": "bdafbfc82f5b1277",
        "type": "ui_toast",
        "z": "c59719cd71299db1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "No",
        "cancel": "Yes",
        "raw": false,
        "className": "",
        "topic": "WO Selected: ",
        "name": "",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "c6e8bd0abc60d4a3"
            ]
        ]
    },
    {
        "id": "8ee6be296e8b7ea2",
        "type": "change",
        "z": "c59719cd71299db1",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "save",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "save.z_DOCO_38",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "bdafbfc82f5b1277"
            ]
        ]
    },
    {
        "id": "50d186d379f03095",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n\n   };\n\nmsg.payload = {};\n\nmsg.payload.Machine = flow.get(\"Machine\");\n//msg.payload.Machine = \"\";\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "f21ceb9c219ecf6c"
            ]
        ]
    },
    {
        "id": "f21ceb9c219ecf6c",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "P553102AMLS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_P553102AMLS",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "535bdfcd44e16f07",
                "ce1ec9998c4e3e14",
                "480d342af1fc2adb",
                "26b73bd97ae61727"
            ]
        ]
    },
    {
        "id": "a2a717f1694717fa",
        "type": "ui_table",
        "z": "016a8a703bd64d79",
        "group": "a29cf195d970aea1",
        "name": "WO Queue",
        "order": 2,
        "width": 14,
        "height": 5,
        "columns": [
            {
                "field": "z_URAB_37",
                "title": "Machine Seq",
                "width": "75",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_DOCO_38",
                "title": "WO #",
                "width": "110",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CPIL_64",
                "title": "Material",
                "width": "180",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_KITL_42",
                "title": "Part #",
                "width": "180",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_UORG_118",
                "title": "Qty Ordered",
                "width": "100",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CMHR_100",
                "title": "Machine Hrs",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1890,
        "y": 240,
        "wires": [
            [
                "8e8c8af054bd0221"
            ]
        ]
    },
    {
        "id": "535bdfcd44e16f07",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Reduce",
        "func": "msg.payload = msg.payload.ServiceRequest1.fs_P553102A_W553102AB.data.gridData.rowset\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 220,
        "wires": [
            [
                "d30235b1f68832d5"
            ]
        ]
    },
    {
        "id": "8e662e223a3f17b7",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "GetWOHDRInfo",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetWOHDRInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2380,
        "y": 240,
        "wires": [
            [
                "57f6b1db6a165f74",
                "4b72190efd5f3066",
                "ddf12bc66a017ddc",
                "681d93ea19aa50b4"
            ]
        ]
    },
    {
        "id": "ec7c07a221b5bf03",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n\n   };\n\nflow.set(\"OpSeq\", msg.payload.z_OPSQ_41);\nflow.set(\"Material\", msg.payload.z_CPIL_64);\nflow.set(\"OpStat\",19);\n\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\nmsg.payload.WorkOrderNo = msg.payload.z_DOCO_38;\nmsg.color = \"white\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 240,
        "wires": [
            [
                "878f4ba78f31e02d",
                "8e662e223a3f17b7",
                "609b581b2421317a"
            ]
        ]
    },
    {
        "id": "86e8789b9e802d89",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 2,
        "width": "6",
        "height": 1,
        "name": "",
        "label": "Part Number",
        "format": "{{msg.payload[\"Item Number\"]}}",
        "layout": "row-spread",
        "className": "",
        "x": 2870,
        "y": 160,
        "wires": []
    },
    {
        "id": "8afb83d83a1fc70c",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 3,
        "width": "6",
        "height": 1,
        "name": "",
        "label": "Part Type",
        "format": "{{msg.payload[\"WO Desc\"]}}",
        "layout": "row-spread",
        "className": "",
        "x": 2860,
        "y": 200,
        "wires": []
    },
    {
        "id": "d977319b90585673",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 4,
        "width": "6",
        "height": 1,
        "name": "",
        "label": "WO Qty + Shrink",
        "format": "{{msg.payload[\"Order + Shrink\"]}}",
        "layout": "row-spread",
        "className": "",
        "x": 2890,
        "y": 240,
        "wires": []
    },
    {
        "id": "527d4024c04289f7",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 5,
        "width": "6",
        "height": 1,
        "name": "",
        "label": "Raw Material",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3200,
        "y": 260,
        "wires": []
    },
    {
        "id": "57f6b1db6a165f74",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Filter T Array",
        "func": "var msgElt = {};\nmsgElt.payload = {};\nfor (var i = 0;i<(msg.payload.ToolNumberDetails.length);i++){\n    msgElt.payload = msg.payload.ToolNumberDetails[i].ToolItem\n    node.send(msgElt);  \n}\nreturn ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 280,
        "wires": [
            [
                "81466e3177d17cb4",
                "f54cf7423c5574e4"
            ]
        ]
    },
    {
        "id": "81466e3177d17cb4",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "Look for T",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "cont",
                "v": "T",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2910,
        "y": 280,
        "wires": [
            [
                "527d4024c04289f7"
            ],
            [
                "b902eb6936ba7781"
            ]
        ]
    },
    {
        "id": "b902eb6936ba7781",
        "type": "join",
        "z": "016a8a703bd64d79",
        "name": "Tool Nums",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 3190,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9145a30eb7c70369",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Tranform Message",
        "func": "//msg.payload.timestamp = (msg.payload.timestamp-(msg.payload.timestamp%1000))/1000;\nvar outputMessages = [];\n\nfor(var index in msg.payload.values){\n    var msgElt = {};\n    msgElt.payload = {};\n\n    \n    // tagAttrs assumes a value like the following for the id key\n    // \"CF.CF001.Prgm_Visual_Factory_M1_CF007.VF.Cast_Number.DATA\"\n    var tagAttrs = msg.payload.values[index].id.split('.');\n    \n    //if(msgElt.payload.attribute )\n    msgElt.payload.department = tagAttrs[0];\n    msgElt.payload.device = tagAttrs[2];\n    msgElt.payload.attribute = tagAttrs[3];\n    msgElt.payload.value = msg.payload.values[index].v;\n    msgElt.payload.time = msg.payload.timestamp;\n    //msgElt.topic = \"APILBS\"\n    msgElt.complete = true;\n    outputMessages.push(msgElt);   \n}\n\nreturn [outputMessages];  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 840,
        "wires": [
            [
                "311fe1504126d9b7"
            ]
        ]
    },
    {
        "id": "968ff4bc7eb27b2a",
        "type": "mqtt in",
        "z": "016a8a703bd64d79",
        "name": "",
        "topic": "iotgateway",
        "qos": "2",
        "datatype": "json",
        "broker": "06aae9471921be4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 840,
        "wires": [
            [
                "9145a30eb7c70369"
            ]
        ]
    },
    {
        "id": "311fe1504126d9b7",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "Machine Type",
        "property": "payload.device",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CH051",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 1,
        "x": 520,
        "y": 840,
        "wires": [
            [
                "5a14d360a5de0aa2",
                "41de54131ab5eef3"
            ]
        ]
    },
    {
        "id": "9b69784af5c6c5c1",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "75c0ef918dcab1ab",
        "order": 3,
        "width": "5",
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Good Count",
        "format": "<font color=\"green\" size=4%>{{payload.value}} PCS",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1095,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "18f60348109275d9",
        "type": "sort",
        "z": "016a8a703bd64d79",
        "name": "",
        "order": "ascending",
        "as_num": true,
        "target": "",
        "targetType": "seq",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload.z_URAB_37",
        "seqKeyType": "msg",
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "70e95e1ea9ebcbab"
            ]
        ]
    },
    {
        "id": "d30235b1f68832d5",
        "type": "split",
        "z": "016a8a703bd64d79",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "18f60348109275d9"
            ]
        ]
    },
    {
        "id": "29a8cce29695298d",
        "type": "join",
        "z": "016a8a703bd64d79",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1730,
        "y": 240,
        "wires": [
            [
                "a2a717f1694717fa",
                "1987c715632f6393"
            ]
        ]
    },
    {
        "id": "a6f7e53e1ef2b967",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 1,
        "width": "6",
        "height": 1,
        "name": "",
        "label": "WO",
        "format": "{{msg.payload.OrderNum}}",
        "layout": "row-spread",
        "className": "",
        "x": 2850,
        "y": 120,
        "wires": []
    },
    {
        "id": "b8e451a4694c5721",
        "type": "ui_form",
        "z": "016a8a703bd64d79",
        "name": "",
        "label": "<size=5%>Pre-Run Checklist:",
        "group": "dde01a19eea3117b",
        "order": 1,
        "width": "4",
        "height": 1,
        "options": [
            {
                "label": "Shadow Board",
                "value": "ShadowBoard",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Loose Pieces",
                "value": "LoosePieces",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "No Leaks",
                "value": "NoLeaks",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "No Spills",
                "value": "NoSpills",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Clear Work Surface",
                "value": "Surface",
                "type": "checkbox",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ShadowBoard": false,
            "LoosePieces": false,
            "NoLeaks": false,
            "NoSpills": false,
            "Surface": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "Restart",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 210,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "930d2e0a76a5641b",
        "type": "ui_table",
        "z": "016a8a703bd64d79",
        "group": "a29cf195d970aea1",
        "name": "Ready + Waiting to be Scheduled",
        "order": 5,
        "width": "14",
        "height": "5",
        "columns": [
            {
                "field": "z_URAB_37",
                "title": "Machine Seq",
                "width": "75",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_DOCO_38",
                "title": "WO #",
                "width": "110",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CPIL_64",
                "title": "Material",
                "width": "180",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_KITL_42",
                "title": "Part #",
                "width": "180",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_UORG_118",
                "title": "Qty Ordered",
                "width": "100",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CMHR_100",
                "title": "Machine Hrs",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1960,
        "y": 200,
        "wires": [
            [
                "ec7c07a221b5bf03"
            ]
        ]
    },
    {
        "id": "d8afac22384bfae9",
        "type": "join",
        "z": "016a8a703bd64d79",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1730,
        "y": 200,
        "wires": [
            [
                "930d2e0a76a5641b"
            ]
        ]
    },
    {
        "id": "0c09db6d274e5377",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "a29cf195d970aea1",
        "order": 3,
        "width": 14,
        "height": 1,
        "name": "",
        "label": "<font color=\"#097479\" size=4.5%>Ready + Waiting to be Scheduled",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2070,
        "y": 160,
        "wires": []
    },
    {
        "id": "fe33bfe49b349b82",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "GetBOMUM",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetBOMUM",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2790,
        "y": 380,
        "wires": [
            [
                "fe94cb10ecbf43d4"
            ]
        ]
    },
    {
        "id": "ddf12bc66a017ddc",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n    'jde-AIS-Auth':flow.get('jde-AIS-Auth'),\n    'jde-AIS-Auth-Device':flow.get('jde-AIS-Auth-Device')\n   };\n\nmsg.payload = {};\n\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch = flow.get(\"Branch_Plant\");\nmsg.payload.ParentItem = flow.get(\"PartNum\");\nmsg.payload.ComponentItem = flow.get(\"Material\");\nmsg.payload.TypeBOM = \"M\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 380,
        "wires": [
            [
                "fe33bfe49b349b82"
            ]
        ]
    },
    {
        "id": "064f65e04d650052",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "token",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "8d466b4adeac2273"
            ]
        ]
    },
    {
        "id": "7ab2948081d69ea9",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "GetAvailability",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetAvailability",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "e679758078d265c2",
                "0b4ff73b4ce6a225",
                "73b715e89531ffd4",
                "ca94246e87107f22"
            ]
        ]
    },
    {
        "id": "8d466b4adeac2273",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\nmsg.payload = {};\n\nmsg.payload.Location = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 320,
        "wires": [
            [
                "7ab2948081d69ea9",
                "0b4ff73b4ce6a225"
            ]
        ]
    },
    {
        "id": "0b4ff73b4ce6a225",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "Get Avail",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "e679758078d265c2",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Reduce",
        "func": "msg.payload.len = msg.payload.ServiceRequest1.fs_P5541271_W5541271A.data.gridData.rowset.length;\n\nif (msg.payload.len == 0) {\n    msg.payload = 0;\n} else {\n    msg.payload = (Number (msg.payload.ServiceRequest1.fs_P5541271_W5541271A.data.gridData.rowset[0].z_PQOH_450));\n}\n\nflow.set(\"LBSIssued\",msg.payload)\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 320,
        "wires": [
            [
                "0b4ff73b4ce6a225"
            ]
        ]
    },
    {
        "id": "ab1177857e4d2a5c",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "LBSRemaining Calc",
        "func": "msg.payload = {};\nmsg.payload.LBSPerPcs = flow.get(\"LBSperPC\");\nmsg.payload.LBSIssued = flow.get(\"LBSIssued\");\nmsg.payload.Total_Count = flow.get(\"Total_Count\"); \n\nmsg.payload.LBSUsed = Number((msg.payload.Total_Count*msg.payload.LBSPerPcs).toFixed(0));\nmsg.payload.LBSRemain = Number((msg.payload.LBSIssued-msg.payload.LBSUsed).toFixed(0));\n\n\nflow.set(\"LBSRemain\",msg.payload.LBSRemain);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "f043e215efe216e8",
                "e49ae4dc7dfed243"
            ]
        ]
    },
    {
        "id": "f043e215efe216e8",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "75c0ef918dcab1ab",
        "order": 6,
        "width": "5",
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Remaining Material",
        "format": "<font color=\"green\" size=4%>{{payload.LBSRemain}} LBS",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 860,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b72190efd5f3066",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Flow Var",
        "func": "flow.set(\"WO#\", msg.payload.OrderNum);\nflow.set(\"PartNum\", msg.payload[\"Item Number\"]);\nflow.set(\"QTYShrink\",msg.payload[\"Order + Shrink\"]);\nflow.set(\"Desc\",msg.payload[\"WO Desc\"]);\n//flow.set(\"Workcenter\", msg.payload[\"\"])\nflow.set(\"ScrapQTY\",0);\nflow.set(\"ScrapQTYTotal\",0);\nflow.set(\"AddNum\",0);\nflow.set(\"Scrap\",false);\nflow.set(\"LastBinCheckCount\",0);\nflow.set(\"GoodParts\",0);\nflow.set(\"SetUp\",true);\nflow.set(\"GoodButton\",0);\nflow.set(\"BadButton\",0);\nflow.set(\"Good_Count\", 0)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 240,
        "wires": [
            [
                "a6f7e53e1ef2b967",
                "86e8789b9e802d89",
                "8afb83d83a1fc70c",
                "d977319b90585673",
                "f54cf7423c5574e4",
                "bd3f3859b5367de3",
                "837b8ec26d5672b4",
                "8537dbfe71cf7bfd"
            ]
        ]
    },
    {
        "id": "fe94cb10ecbf43d4",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set LBSperPC",
        "func": "flow.set(\"LBSperPC\",msg.payload.Quantity)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2980,
        "y": 380,
        "wires": [
            [
                "74e5c0a4b907cab4"
            ]
        ]
    },
    {
        "id": "e9b13d0fc38cd949",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Good_Count",
        "func": " //BC MACHINE IS OFFLINE RN\nflow.set(\"Good_Count\",msg.payload.value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 700,
        "wires": [
            [
                "9b69784af5c6c5c1"
            ]
        ]
    },
    {
        "id": "d3aff5741b0ee356",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "Trigger LBS Remaining",
        "props": [],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "ab1177857e4d2a5c",
                "3e2138d09dd57c9d"
            ]
        ]
    },
    {
        "id": "e49ae4dc7dfed243",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "LBSRemain",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "74e5c0a4b907cab4",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "LBS/PC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3250,
        "y": 380,
        "wires": []
    },
    {
        "id": "0d2f810cab502a04",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "Response from JDE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 2780,
        "wires": []
    },
    {
        "id": "563ea19eaf08a8a7",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Machine_Status",
        "func": "\nflow.set(\"MachineStatus\",msg.payload);\nconst time = new Date();\nconst options = {hour12:false, timestyle:\"short\", timeZone:\"EST\"};\nvar timejde = time.toLocaleTimeString('en-US', options);\ntimejde = timejde.replace(\":\",\"\");\ntimejde = timejde.replace(\":\",\"\");\nflow.set(\"TagTime\", timejde);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "b1c3198de7d7f6c9",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "TimeRemain",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "d55f08d61e96c954",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "Send Machine Status",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://dv-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORC_UpdateRoutingQtyCompletions",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 3100,
        "y": 2780,
        "wires": [
            [
                "0d2f810cab502a04",
                "25fea6e315aa9915"
            ]
        ]
    },
    {
        "id": "4e608324f8a0f18b",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Rate",
        "func": "if (msg.payload.value == 0){\n} else {\n    flow.set(\"Rate\",msg.payload.value);\n}\n\nconst time = new Date();\nconst options = {hour12:false, timestyle:\"short\", timeZone:\"EST\"};\nmsg.payload.timejde = time.toLocaleTimeString('en-US', options);\nmsg.payload.timejde = msg.payload.timejde.replace(\":\",\"\");\nmsg.payload.timejde = msg.payload.timejde.replace(\":\",\"\");\nflow.set(\"TagTimeRate\", msg.payload.timejde);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 860,
        "wires": [
            [
                "7aaca2496c3600b6",
                "7a02e3a47bfc8546"
            ]
        ]
    },
    {
        "id": "7aaca2496c3600b6",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "75c0ef918dcab1ab",
        "order": 4,
        "width": "5",
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Rate",
        "format": "<font color=\"green\" size=4%>{{payload.value}} PPM",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1015,
        "y": 860,
        "wires": [],
        "l": false
    },
    {
        "id": "c3b7b2bd815f8ed9",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "75c0ef918dcab1ab",
        "order": 5,
        "width": "5",
        "height": 1,
        "name": "RemainTime",
        "label": "<font color={{msg.color}} size=4% >{{payload.name}}",
        "format": "<font color={{msg.color}} size=4%>{{payload.RemainTime}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 500,
        "wires": []
    },
    {
        "id": "3e2138d09dd57c9d",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set RemainTime",
        "func": "msg.payload = {};\n\nmsg.payload.RemainPCS = flow.get(\"QTYShrink\") - flow.get(\"Good_Count\");\nmsg.payload.Rate = flow.get(\"Rate\");\nmsg.payload.RemainTime = msg.payload.RemainPCS/msg.payload.Rate;//MIN\nmsg.payload.RemainTime = Number((msg.payload.RemainTime/60).toFixed(2)); //HR\n\nif(msg.payload.RemainPCS >= 0){\n    msg.payload.name = \"Time Remaining\";\n    msg.color = \"green\";\n    msg.payload.hours = Math.floor(msg.payload.RemainTime);\n    min = msg.payload.RemainTime - msg.payload.hours;\n    min =  Math.floor((min*60));\n    msg.payload.RemainTime = msg.payload.hours+\" H \"+min+\" M\";\n    flow.set(\"RemainTime\", msg.payload.RemainTime);\n}\nelse {\n    msg.payload.name = \"Over Run By\";\n    msg.color = \"yellow\";\n    msg.payload.hours = Math.ceil(msg.payload.RemainTime);\n    min = msg.payload.RemainTime - msg.payload.hours;\n    min =  Math.ceil((min*60));\n    msg.payload.RemainTime = -1*msg.payload.hours+\" H \"+-1*min+\" M\";\n    flow.set(\"RemainTime\", msg.payload.RemainTime);\n}\n\nreturn msg;\n\n// Determine text color\n// Round down to get Hours alone if positive, Round up if negative\n// Same with getting minutes alone\n// Form displayed message",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "c3b7b2bd815f8ed9",
                "b1c3198de7d7f6c9"
            ]
        ]
    },
    {
        "id": "11ead94a3579d6fc",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "API: MLS",
        "info": "",
        "x": 100,
        "y": 240,
        "wires": []
    },
    {
        "id": "06fd25c593ebbb5c",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "API: Material Released",
        "info": "",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "d78789bea8884821",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "API :LBS/PC",
        "info": "",
        "x": 2630,
        "y": 340,
        "wires": []
    },
    {
        "id": "2bc1d7dee4925242",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "Calc + Display: LBS + Time Remaining",
        "info": "",
        "x": 240,
        "y": 380,
        "wires": []
    },
    {
        "id": "c94db5e4424f71f5",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "KepserverEX Machine Data + Display",
        "info": "",
        "x": 240,
        "y": 780,
        "wires": []
    },
    {
        "id": "fc3a9aad9bd32289",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "WO Completed?",
        "group": "75c0ef918dcab1ab",
        "order": 7,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "WO Completed?",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 610,
        "y": 1560,
        "wires": [
            [
                "3f290330c63f30a0"
            ]
        ]
    },
    {
        "id": "2453d6895ef44a63",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set New WO QTY",
        "func": "if (flow.get(\"Add\") == true){\n    test = flow.get(\"QTYShrink\")+msg.payload;\n    flow.set(\"QTYShrink\",test);\n} if(flow.get(\"Scrap\")== true){\n    test = msg.payload;\n    flow.set(\"ScrapQTYTotal\", flow.get(\"ScrapQTYTotal\")+test);\n    flow.set(\"ScrapQTY\",0);\n}\nmsg.payload = test;\nflow.set(\"Add\",false);\nflow.set(\"Scrap\",false);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1600,
        "wires": [
            [
                "d9177396eac9a23b",
                "34350f46e63959c5",
                "0d338ccb0e6a6710"
            ]
        ]
    },
    {
        "id": "0d469c3157630e1b",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "Wire Run Out",
        "group": "75c0ef918dcab1ab",
        "order": 8,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "Accept Wire Run Out: {{msg.payload.RunOutQty}} PCS",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 800,
        "y": 1640,
        "wires": [
            [
                "d69aa1e50a28c5ae"
            ]
        ]
    },
    {
        "id": "58ffe12315e4f8fa",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set RunOutQty",
        "func": "msg.payload = {};\nmsg.payload.RunOutQty = Math.ceil(flow.get(\"LBSRemain\")/flow.get(\"LBSperPC\")).toLocaleString(\"en-US\");\nflow.set(\"RunOutQty\",msg.payload.RunOutQty);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1640,
        "wires": [
            [
                "0d469c3157630e1b"
            ]
        ]
    },
    {
        "id": "de99d86374788bcd",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "Go to Run",
        "events": "change",
        "x": 370,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7dbf2b14e8175d4b",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "bf1de1d8fbee778b",
        "order": 3,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "WO Set Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "#0b5b7d",
        "className": "<body>div {white-space: none;}</body>",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"1CH051_WORunning\",\"1CH051_MaintWO\",\"1CH051_QC\",\"1CH051_DSI\",\"1CH051_Machine\",\"1CH051_DownTime\",\"1CH051_Notif\"],\"show\":[\"1CH051_MachineSchedule\",\"1CH051_Checklist\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "de99d86374788bcd"
            ]
        ]
    },
    {
        "id": "08dff1a24f380ee0",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "bf1de1d8fbee778b",
        "order": 4,
        "width": "5",
        "height": 1,
        "passthru": true,
        "label": "RUN Screen",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"1CH051_MachineSchedule\",\"1CH051_Checklist\",\"1CH051_MaintWO\",\"1CH051_Notif\"],\"show\":[\"1CH051_WORunning\",\"1CH051_DSI\",\"1CH051_QC\",\"1CH051_Machine\",\"1CH051_DownTime\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "de99d86374788bcd"
            ]
        ]
    },
    {
        "id": "5cd82bacf7fc7bb7",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "bf1de1d8fbee778b",
        "order": 5,
        "width": "5",
        "height": 1,
        "passthru": false,
        "label": "Maint",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"1CH051_MachineSchedule\",\"1CH051_Checklist\",\"1CH051_WORunning\",\"1CH051_DSI\",\"1CH051_QC\",\"1CH051_Machine\",\"1CH051_DownTime\",\"1CH051_Notif\"],\"show\":[\"1CH051_MaintWO\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "de99d86374788bcd"
            ]
        ]
    },
    {
        "id": "dc1ff0e81374bb2a",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set API Params - Report Out 30+endtime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.Quantity = flow.get(\"Good_Count\")-flow.get(\"CurrentCount\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = flow.get(\"Status\");\nmsg.payload.EndTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = flow.get(\"TyHrs\");\n\nmsg.topic = 'token';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1240,
        "wires": [
            [
                "187a54d88e976bc1"
            ]
        ]
    },
    {
        "id": "c4dfa1f72e5d2305",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2940,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "a6dfa226a6e13083",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "Send to JDE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 2660,
        "wires": []
    },
    {
        "id": "4d92b49917625b5a",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set RunSet",
        "func": "msg.payload.down = 0;\nif (msg.payload.value == \"2\") {\n    flow.set(\"RunSet\",2);\n    msg.enabled = false;\n    msg.payload.value = flow.get(\"RunSet\");\n    return msg\n} else if (msg.payload.value == \"1\") {\n    flow.set(\"RunSet\",1);\n    msg.enabled = false;\n    msg.payload.value = flow.get(\"RunSet\");\n    return msg\n} else if (msg.payload.value == \"3\"){\n\n// This next piece will make sure that downtime only required if machine was in run\n// If machine was in set up and stopped, no downtime code needed, assuming down for set up still\n\n    if(flow.get(\"RunSet\") == 1){\n        msg.payload.down = 3;\n        msg.enabled = true;\n        msg.topic = \"show\";\n        msg.payload.value = flow.get(\"RunSet\");\n        return msg\n    } \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 800,
        "wires": [
            [
                "683f17db75a63739"
            ]
        ]
    },
    {
        "id": "49a6678fe9843dea",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "St = 30",
        "func": "\nflow.set(\"Status\",\"30\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1240,
        "wires": [
            [
                "dc1ff0e81374bb2a",
                "3329f0837a1cc4c6"
            ]
        ]
    },
    {
        "id": "e0c1afb36f6214cf",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Check WO Status",
        "func": "msg.payload = {}\nmsg.payload.Good = flow.get(\"Good_Count\");\nmsg.payload.QTY = flow.get(\"QTYShrink\");\nmsg.enabled = true;\nmsg.background = \"green\";\n\n//msg.payload.Good = 5000;\n//msg.payload.QTY = 5000;\n\n\nif (msg.payload.Good < msg.payload.QTY){\n    msg.notif = true;\n\n} else {\n    msg.notif = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1560,
        "wires": [
            [
                "bbe714a9c896ce77"
            ]
        ]
    },
    {
        "id": "b9357b270c00ed32",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "Trigger",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 135,
        "y": 1560,
        "wires": [
            [
                "e0c1afb36f6214cf"
            ]
        ],
        "l": false
    },
    {
        "id": "fa05567ca59f3ad5",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Variables",
        "func": "\nflow.set(\"Branch_Plant\",\"111001\");\nflow.set(\"Machine\",\"1CH051\");\nflow.set(\"BrankampMachineID\",30);\nflow.set(\"MachineName\",\"CH05\");\nflow.set(\"WCNum\",141250051);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nflow.set(\"Branch_Plant\",\"111001\");\nflow.set(\"Machine\",\"1CH051\");\nflow.set(\"BrankampMachineID\",30);\nflow.set(\"MachineName\",\"CH05\");",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7aa5ecba176cb593",
        "type": "filter",
        "z": "016a8a703bd64d79",
        "name": "Filter Out Op Stat",
        "property": "payload.z_OPST_51",
        "propertyType": "msg",
        "asArray": false,
        "itemProperty": "z_DOCO_38",
        "itemPropertyType": "item",
        "rules": [
            {
                "t": "neq",
                "v": "20",
                "vt": "num",
                "output": 1
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1370,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "70e95e1ea9ebcbab",
        "type": "filter",
        "z": "016a8a703bd64d79",
        "name": "Filter Out Op Stat",
        "property": "payload.z_URAB_37",
        "propertyType": "msg",
        "asArray": false,
        "itemProperty": "payload",
        "itemPropertyType": "item",
        "rules": [
            {
                "t": "eq",
                "v": "999",
                "vt": "str",
                "output": 1
            },
            {
                "t": "neq",
                "v": "999",
                "vt": "num",
                "output": 2
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1570,
        "y": 220,
        "wires": [
            [
                "d8afac22384bfae9"
            ],
            [
                "29a8cce29695298d"
            ]
        ]
    },
    {
        "id": "f24ece8ad748bc58",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "API : WODetail",
        "info": "",
        "x": 2380,
        "y": 280,
        "wires": []
    },
    {
        "id": "11cdf9339ac3e499",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "75c0ef918dcab1ab",
        "order": 2,
        "width": "5",
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Status",
        "format": "<font color=\"green\" size=4%>{{payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1315,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "653c3cae3c7f7e1a",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "TyHrs=2 - Report Out 20+endtime",
        "func": "msg.payload = {};\n\nmsg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.Quantity = flow.get(\"Good_Count\")-flow.get(\"CurrentCount\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"20\";\nmsg.payload.Time = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\n//msg.payload.TyHrs = 2;\n\nmsg.payload.timestamp = new Date();\nconst date = new Date(msg.payload.timestamp)\nconst options = {year: 'numeric', month: 'numeric', day: 'numeric'};\nmsg.payload.timestamp = date.toLocaleDateString('en-US', options)\n\nflow.set(\"ReportCount\",0);\nflow.set(\"CurrentCount\",flow.get(\"Good_Count\"));\n\nmsg.topic = 'token';\nreturn msg;\n\n// USE Equipment Number\n// Test Shift code 1 or 2\n// TyHrs - 2 set up, 1 run, 4 - good pcs, 5 - scrap pcs\n// status is being handled in ORCH",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2660,
        "wires": [
            [
                "c4dfa1f72e5d2305",
                "a6dfa226a6e13083"
            ]
        ]
    },
    {
        "id": "43a8cf2dadc04f8d",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "TyHrs=1 - Report Out 20+begintime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"20\";\nmsg.payload.BeginTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = 1;\n\nmsg.topic = 'token';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2700,
        "wires": [
            [
                "c4dfa1f72e5d2305",
                "a6dfa226a6e13083"
            ]
        ]
    },
    {
        "id": "3595e0de95138e1b",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "TyHrs Auto Rule",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2260,
        "y": 2640,
        "wires": [
            [
                "653c3cae3c7f7e1a",
                "43a8cf2dadc04f8d"
            ],
            [
                "c66e9a906cdfb205",
                "ee976402ee1828f0"
            ]
        ]
    },
    {
        "id": "c66e9a906cdfb205",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "TyHrs=1 - Report Out 20+endtime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.Quantity = flow.get(\"Good_Count\")-flow.get(\"CurrentCount\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"20\";\nmsg.payload.EndTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = 1;\n\nflow.set(\"ReportCount\",0);\nflow.set(\"CurrentCount\",flow.get(\"Good_Count\"));\n\nmsg.topic = 'token';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2740,
        "wires": [
            [
                "c4dfa1f72e5d2305",
                "a6dfa226a6e13083"
            ]
        ]
    },
    {
        "id": "ee976402ee1828f0",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "TyHrs=2 - Report Out 19+begintime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"19\";\nmsg.payload.BeginTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = 2;\n\nmsg.topic = 'token';\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2780,
        "wires": [
            [
                "c4dfa1f72e5d2305",
                "a6dfa226a6e13083"
            ]
        ]
    },
    {
        "id": "fc83438d37019715",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "TyHrs Button Rule",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 2740,
        "wires": [
            [
                "43a8cf2dadc04f8d"
            ],
            [
                "ee976402ee1828f0"
            ]
        ]
    },
    {
        "id": "87afaf4c547620e7",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "TyHrs Button Rule",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 2780,
        "wires": [
            [
                "c66e9a906cdfb205"
            ],
            [
                "653c3cae3c7f7e1a"
            ]
        ]
    },
    {
        "id": "0215bff4dab9024b",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "ON/OFF",
        "property": "payload.labor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2080,
        "y": 2760,
        "wires": [
            [
                "fc83438d37019715"
            ],
            [
                "87afaf4c547620e7"
            ]
        ]
    },
    {
        "id": "e68d878f8fae579b",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "ON/OFF",
        "property": "payload.labor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2100,
        "y": 2640,
        "wires": [
            [
                "3595e0de95138e1b"
            ],
            []
        ]
    },
    {
        "id": "187a54d88e976bc1",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Reset WO Info",
        "func": "//*** MUST BE AFTER STATUS 30 MESSAGE SENT TO API ***//\n\nflow.set(\"RemainTime\",\"\");\n\nmsg.payload = {};\n\nmsg.payload.OrderNum = \"Indirect\";\nmsg.payload[\"Item Number\"] = \"\";\nmsg.payload[\"WO Desc\"] = \"\";\nmsg.payload[\"Order + Shrink\"] = \"\";\n\nflow.set(\"Status\",\"20\")\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1240,
        "wires": [
            [
                "5188c107aacdca10"
            ]
        ]
    },
    {
        "id": "46c8060fd3e45bfd",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Stat",
        "func": "if (flow.get(\"Status\") == \"30\"){\n    msg.payload = \"NA\";\n} else {\n    msg.payload = {};\n    msg.payload.labor = flow.get(\"Labor\");\n    msg.payload.value = flow.get(\"TyHrs\");\n    msg.payload.EmployeeNumber = flow.get(\"EmployeeNumber\")\n\n}\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 2760,
        "wires": [
            [
                "0215bff4dab9024b",
                "3fb3772e4d15d980"
            ]
        ]
    },
    {
        "id": "878f4ba78f31e02d",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "bf1de1d8fbee778b",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "Machine #",
        "label": "",
        "format": "<font color={{msg.color}} size=5%>{{payload.Machine}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2380,
        "y": 340,
        "wires": []
    },
    {
        "id": "2ac420d283cb6807",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "a29cf195d970aea1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reload MLS",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "fa05567ca59f3ad5",
                "480d342af1fc2adb",
                "50d186d379f03095",
                "8d466b4adeac2273"
            ]
        ]
    },
    {
        "id": "755c3f3d9dc2e88d",
        "type": "trigger",
        "z": "016a8a703bd64d79",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1330,
        "y": 880,
        "wires": [
            [
                "e8c9b70c71fdf919"
            ]
        ]
    },
    {
        "id": "e8c9b70c71fdf919",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "",
        "property": "payload.down",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1470,
        "y": 880,
        "wires": [
            [
                "71550c0f7ba91bc5",
                "d64e8b5fc3710a1f"
            ]
        ]
    },
    {
        "id": "71550c0f7ba91bc5",
        "type": "ui_template",
        "z": "016a8a703bd64d79",
        "group": "a091f834dadec4dc",
        "name": "DownTime",
        "order": 9,
        "width": "0",
        "height": "0",
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <h2 style=\"margin:10px\">DownTime Code</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n\n           <div layout=\"row\" layout-align=\"center\">\n                <div class=\"number_placeholder\">\n                    {{passcode}}\n                </div>\n\n            </div>\n            \n            <div layout=\"column\" layout-align=\"center\" style=\"margin-top: 10px\">\n                <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('ToolChange')\">ToolChange</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Changeover')\">Changeover</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Maintenance')\">Maintenance</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Troubleshooting')\">Troubleshooting</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('NotScheduled')\">NotScheduled</md-button>\n                    </div>\n\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('OutofSpec')\">OutofSpec</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('QualityHold')\">QualityHold</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Other')\">Other</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"confirm()\">\n                            <ng-md-icon icon=\"done\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"delete()\">\n                            <ng-md-icon icon=\"arrow_back\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </div>\n            </div> \n          \n        </div> <!--dialog_body-->\n    </div> <!--dialog_content-->\n</div>  <!--dialog-->\n\n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n    position: absolute;\n    background-color: #fff;\n    left: calc(50% - 170px);\n    top: 30px;\n    border-radius: 10px;\n    padding: 0;\n    width: 500px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Media query for smartphones (to Fix?) */\n@media only screen and (min-device-width : 375px) and (max-device-width : 667px) { \n    .dialog_content {\n    margin-top: 5%;\n    margin-left: 5%;\n}\n}\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {top: -300px; opacity: 0} \n    to {top: 0; opacity: 1}\n}\n\n@keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: #03A9F4;\n    border-radius: 10px 10px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n/* __ */\n.number_placeholder{\n    width: 400px;\n    height: 34px;\n    margin: 10px;\n    font-size: 20pt;\n    text-align: center;\n    border-bottom: 1px solid black;\n}\n\n/* Number container */\n.number_box{\n    margin: 5px;\n}\n\n/* Buttons style */\n.pin {\n    min-height: 50px;\n    min-width: 50px;\n    font-weight: bold;\n    margin: 0px 10px 10px 0px;\n    box-shadow: 4px 4px 6px 0 #dadada;\n    background-color: #30B6F6;\n    color: #fff;\n}\n\n.pin:not([disabled]):hover {\n    background-color: #03A9F4;\n}\n/* WHAT IS THIS? */\n.btn1 {\n  color : rgb(49, 46, 46);\n  background-color: rgba(255, 222, 121, 0.96);\n  border-radius: 10px 0 0 10px;\n  font-size: 16px;\n}\n\n.btn1:not([disabled]):hover {\n  background-color: rgba(107, 103, 91, 0.96);\n  color: white;\n}\n\n.btn1[disabled] {\n  color : rgb(187, 187, 187);\n  background-color: rgba(230, 230, 230, 0.96);\n}\n\n</style>\n\n<script>\n\n/**\n * pin_dialog.js\n * Node-Red UI template for Node-Red Dashboard. \n * Custom dialog that asks for a PIN to allow actions\n * Enjoy it :). \n * -- Daniel\n *\n *\n * @license The Unlicense, http://unlicense.org/\n * @version 0.2\n * @author  Daniel Lando, https://github.com/robertsLando\n * @updated 2019-03-18\n * @link    ----\n *\n *\n */\n\nvar dialog;\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    scope.payload = \"\";\n    scope.inited = true;\n    \n    scope.init = function() {\n        scope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //remove any previously added pin dialog\n        $('.dialog').remove();\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body);\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n    }\n    \n    scope.add = function(value) {\n        if(scope.passcode.length < 1) {\n            scope.passcode = scope.passcode + value;\n            if(scope.passcode.length == 1) {\n                console.log(\"The four digit code was entered\");\n                   \n            }\n        }\n    }\n \n    scope.delete = function() {\n        if(scope.passcode.length > 0) {\n            scope.passcode = scope.passcode.substring(0, scope.passcode.length - scope.passcode.length);\n        }\n    }\n    \n    scope.confirm = function() {\n        if(scope.passcode.length > 0) {\n            scope.send({topic: \"Last Downtime Code: \", payload : scope.passcode});\n            scope.closeDialog();\n            scope.passcode = \"\";\n            scope.payload = \"\";\n        }\n    }\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n                   if(scope.inited){\n                        scope.payload = data.payload;\n                        scope.showDialog();\n                   }\n                   else\n                        scope.inited = true;\n                break;\n                case \"close\": \n                    scope.closeDialog(); \n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1650,
        "y": 880,
        "wires": [
            [
                "234122ef0374e6f8"
            ]
        ]
    },
    {
        "id": "480d342af1fc2adb",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Green Button",
        "func": "if (msg.payload == \"1\"){\n    msg.payload = {};\n    msg.background = \"green\";\n    node.send(msg);\n}\nif (msg.payload.jde__status == \"SUCCESS\"){\n    msg.payload = {};\n    msg.background = \"grey\";\n    node.send(msg);\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 280,
        "wires": [
            [
                "2ac420d283cb6807"
            ]
        ]
    },
    {
        "id": "bf4bdb2ab59b0398",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "75c0ef918dcab1ab",
        "order": 1,
        "width": "5",
        "height": "1",
        "name": "Downtime Code",
        "label": "<font color={{msg.color}} size=4%>{{topic}}",
        "format": "<font color={{msg.color}} size=4%>{{payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2280,
        "y": 880,
        "wires": []
    },
    {
        "id": "234122ef0374e6f8",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "",
        "func": "const time = new Date();\nconst options = {hour12:false, timestyle:\"short\", year:\"numeric\",month:\"short\",day:\"2-digit\"};\n\nmsg.time = time.toLocaleTimeString('en-US', options);\n\nmsg.color = \"firebrick\";\n\nmsg.payload.down = 0;\nflow.set(\"DT\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 880,
        "wires": [
            [
                "bf4bdb2ab59b0398",
                "f2e5309c2ffeb7a8",
                "cb9190342c70ccd6",
                "755c3f3d9dc2e88d"
            ]
        ]
    },
    {
        "id": "f2e5309c2ffeb7a8",
        "type": "trigger",
        "z": "016a8a703bd64d79",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1980,
        "y": 880,
        "wires": [
            [
                "4bb2dbbb7527a5d1"
            ]
        ]
    },
    {
        "id": "4bb2dbbb7527a5d1",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Text Color",
        "func": "msg.color = \"gray\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 880,
        "wires": [
            [
                "bf4bdb2ab59b0398"
            ]
        ]
    },
    {
        "id": "236443d42934203e",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2420,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "51381995abf3f2c5",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2460,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "0a1031bb1990e832",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2500,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "78498f6ca0379306",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "4",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2540,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "f7391f78ec839b2d",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "5",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2580,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "a250b4499b86eea9",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "6",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2620,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "0a6ed88963c328c7",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "7",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "7",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2660,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "b879ef969b394547",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "8",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "8",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2700,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "12a0f578c2eb06fa",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "9",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "9",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2740,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "a7335f64a82eb8c2",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "0",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2780,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "711333751413338b",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2860,
        "wires": [
            [
                "84db52e944ab023e"
            ]
        ]
    },
    {
        "id": "84db52e944ab023e",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set msg.complete",
        "func": "msg.complete = true\nmsg.payload = ''\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2820,
        "wires": [
            [
                "876a27debc395690",
                "eab556f98e4f3b82",
                "82d5075edf6c9342"
            ]
        ]
    },
    {
        "id": "82d5075edf6c9342",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "UI",
        "func": "\nmsg.payload = {\"group\":{\"hide\":[\"1CH051_Pin\"],\"show\":[\"1CH051_DSI\"]}};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2820,
        "wires": [
            [
                "c916ef326e83ca0b"
            ]
        ]
    },
    {
        "id": "c916ef326e83ca0b",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "change",
        "x": 740,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "f73222b4b35791f8",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Pin",
        "func": "if (flow.get(\"Add\")==true) {\n    flow.set(\"AddNum\",msg.payload);\n    msg.payload = Number (flow.get(\"AddNum\"));\n    return [msg,null,null]\n} else if (flow.get(\"Scrap\")==false) {\n    flow.set(\"EmployeeNumber\",msg.payload);\n    msg.payload = flow.get(\"EmployeeNumber\");\n    return [null,msg,null]\n} else {\n    msg.payload = Number (msg.payload);\n    return [null,null,msg]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2600,
        "wires": [
            [
                "d1b81ef9c295d971"
            ],
            [
                "29532f00a45bedb6"
            ],
            [
                "e46b1aa3dbb4dd5d"
            ]
        ],
        "outputLabels": [
            "AddNum",
            "Emp",
            ""
        ]
    },
    {
        "id": "29532f00a45bedb6",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "EmpNum",
        "mode": "link",
        "links": [
            "ca6052c851d1e8fb",
            "620dbad75a0bbd48"
        ],
        "x": 795,
        "y": 2600,
        "wires": []
    },
    {
        "id": "ca6052c851d1e8fb",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "link in 1",
        "links": [
            "3329f0837a1cc4c6",
            "29532f00a45bedb6"
        ],
        "x": 1745,
        "y": 2760,
        "wires": [
            [
                "46c8060fd3e45bfd"
            ]
        ]
    },
    {
        "id": "609b581b2421317a",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "PRO_ORC_GetMachineRatesInfo",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PRO_ORC_GetMachineRatesInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2450,
        "y": 200,
        "wires": [
            [
                "7b42d474d8a8be24",
                "294a9eef4f4ed04e",
                "e1bfd39c5599ca1a",
                "47167596ec379233"
            ]
        ]
    },
    {
        "id": "294a9eef4f4ed04e",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "STD Rate",
        "format": "{{msg.payload.STDPPM}}",
        "layout": "row-spread",
        "className": "",
        "x": 2700,
        "y": 80,
        "wires": []
    },
    {
        "id": "7b42d474d8a8be24",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "3c75836e726232e4",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "MAX Rate",
        "format": "{{msg.payload.MAXPPM}}",
        "layout": "row-spread",
        "className": "",
        "x": 2700,
        "y": 40,
        "wires": []
    },
    {
        "id": "683f17db75a63739",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "gateway",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1300,
        "y": 780,
        "wires": []
    },
    {
        "id": "eab556f98e4f3b82",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "EmployeeNumberInput",
        "func": "var msgElt = {};\n\nif (msg.complete == true){\n    msg.payload = flow.get(\"Pass\")\n    flow.set(\"Pass\",\"\")\n    msgElt.payload = \"\"\n    return [msg,msgElt];\n} else if (msg.payload == \"clear\"){\n    pass = \"\";\n    flow.set(\"Pass\",pass);\n    msgElt = {};\n    msgElt.payload = pass;\n    return [null,msgElt]\n} else {\n    pass = flow.get(\"Pass\");\n    pass = pass + msg.payload;\n    flow.set(\"Pass\",pass);\n    msgElt = {};\n    msgElt.payload = pass;\n    return [null,msgElt]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"Pass\",\"\")",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2600,
        "wires": [
            [
                "f73222b4b35791f8"
            ],
            [
                "2a8098461fb3693b"
            ]
        ]
    },
    {
        "id": "2a8098461fb3693b",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "c76d0571a1bb5544",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Number Field",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 660,
        "y": 2660,
        "wires": []
    },
    {
        "id": "b81294482863e9e2",
        "type": "change",
        "z": "016a8a703bd64d79",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Machine_Status",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.time",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 920,
        "wires": [
            [
                "57492895d033b79f",
                "4e4b0a0a4e4f816d"
            ]
        ]
    },
    {
        "id": "57492895d033b79f",
        "type": "mqtt out",
        "z": "016a8a703bd64d79",
        "name": "CH051",
        "topic": "CH051",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "06aae9471921be4e",
        "x": 2350,
        "y": 920,
        "wires": []
    },
    {
        "id": "cb9190342c70ccd6",
        "type": "change",
        "z": "016a8a703bd64d79",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Unknown",
                "fromt": "str",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Production",
                "fromt": "str",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Set Up",
                "fromt": "str",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ToolChange",
                "fromt": "str",
                "to": "8",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Changeover",
                "fromt": "str",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Maintenance",
                "fromt": "str",
                "to": "5",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Troubleshooting",
                "fromt": "str",
                "to": "7",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NotScheduled",
                "fromt": "str",
                "to": "11",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OutofSpec",
                "fromt": "str",
                "to": "13",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "QualityHold",
                "fromt": "str",
                "to": "14",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Stopped",
                "fromt": "str",
                "to": "10",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Other",
                "fromt": "str",
                "to": "10",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "str",
                "to": "10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 920,
        "wires": [
            [
                "b81294482863e9e2"
            ]
        ]
    },
    {
        "id": "ac339002c8dea53b",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "c76d0571a1bb5544",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "clear",
        "payloadType": "str",
        "topic": "clear",
        "topicType": "msg",
        "x": 130,
        "y": 2820,
        "wires": [
            [
                "eab556f98e4f3b82"
            ]
        ]
    },
    {
        "id": "fe6942f43e7d63ac",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "Run Screen",
        "links": [
            "f467582ecdfdb5a4",
            "3b977a7ea4b37de5",
            "5b880c3c1aac387f",
            "47e0fadaa601b53a"
        ],
        "x": 25,
        "y": 120,
        "wires": [
            [
                "08dff1a24f380ee0"
            ]
        ]
    },
    {
        "id": "f467582ecdfdb5a4",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "",
        "mode": "link",
        "links": [
            "fe6942f43e7d63ac"
        ],
        "x": 1815,
        "y": 400,
        "wires": []
    },
    {
        "id": "3fb3772e4d15d980",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "56da9086b4c2e3c3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last Log by:",
        "format": "{{msg.payload.EmployeeNumber}}",
        "layout": "row-spread",
        "className": "",
        "x": 2090,
        "y": 2800,
        "wires": []
    },
    {
        "id": "991d66a4c0a3a6e1",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "link in 2",
        "links": [
            "7ebc9a11086a6d41"
        ],
        "x": 35,
        "y": 80,
        "wires": [
            [
                "7dbf2b14e8175d4b"
            ]
        ]
    },
    {
        "id": "ce1ec9998c4e3e14",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "MLS Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.jde__status",
        "targetType": "msg",
        "statusVal": "payload.jde__status",
        "statusType": "auto",
        "x": 990,
        "y": 240,
        "wires": []
    },
    {
        "id": "4b11e2d4106fe678",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "5b289b6f88d37c4a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Notif Text",
        "label": "WO#: ",
        "format": "{{msg.payload.WorkOrderNo}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1320,
        "wires": []
    },
    {
        "id": "8f4ed818b6f5ef29",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "Confirm",
        "group": "5b289b6f88d37c4a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "confirm",
        "topicType": "msg",
        "x": 380,
        "y": 1440,
        "wires": [
            [
                "b9a8eb0b2b0db8f0"
            ]
        ]
    },
    {
        "id": "299e76bb78489fb7",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "Decline",
        "group": "5b289b6f88d37c4a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Decline",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 1480,
        "wires": [
            [
                "d33601343e7aead8"
            ]
        ]
    },
    {
        "id": "d69aa1e50a28c5ae",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Run Out",
        "func": "msg.payload = (flow.get(\"RunOutQty\"));\nmsg.payload = Number (msg.payload.replace(\",\",\"\"));\n\nflow.set(\"Add\",true);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1640,
        "wires": [
            [
                "2453d6895ef44a63"
            ]
        ]
    },
    {
        "id": "08ceeb45f23a952b",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set msg",
        "func": "msg = {};\nmsg.payload = {};\nmsg.payload.WorkOrderNo = flow.get(\"WO#\");\nmsg.payload.Quantity = flow.get(\"Good_Count\");\nmsg.payload.Scrap = 0;\nmsg.payload.Part = flow.get(\"PartNum\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "4b11e2d4106fe678",
                "9cf0503212604c57",
                "0e4c1dbb1906bd54"
            ]
        ]
    },
    {
        "id": "9cf0503212604c57",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "5b289b6f88d37c4a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Notif Text",
        "label": "Part: ",
        "format": "{{msg.payload.Part}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1360,
        "wires": []
    },
    {
        "id": "0e4c1dbb1906bd54",
        "type": "ui_text",
        "z": "016a8a703bd64d79",
        "group": "5b289b6f88d37c4a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Notif Text",
        "label": "Good Count: ",
        "format": "{{msg.payload.Quantity}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1400,
        "wires": []
    },
    {
        "id": "b9a8eb0b2b0db8f0",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Confirm",
        "func": "msg.payload = {\"group\":{\"show\":[\"1CH051_Machine\"],\"hide\":[\"1CH051_Notif\"]}};\nflow.set(\"OpStat\",30);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1440,
        "wires": [
            [
                "13505b0ad7ef5756",
                "115a378f88225544",
                "b9b7678e3c583450",
                "0cf064a2c038cef2"
            ]
        ]
    },
    {
        "id": "13505b0ad7ef5756",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "change",
        "x": 800,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "af1c1780ff18f93a",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "WOCompIn",
        "links": [
            "8478ff4db88f298d",
            "986c9daea216405b"
        ],
        "x": 125,
        "y": 1320,
        "wires": [
            [
                "08ceeb45f23a952b"
            ]
        ]
    },
    {
        "id": "115a378f88225544",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "WOCompOut",
        "mode": "link",
        "links": [
            "c698b215f73b402a",
            "aad3465a58790310"
        ],
        "x": 655,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c698b215f73b402a",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "WOCompIn2",
        "links": [
            "115a378f88225544"
        ],
        "x": 125,
        "y": 1240,
        "wires": [
            [
                "49a6678fe9843dea"
            ]
        ]
    },
    {
        "id": "d9177396eac9a23b",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "WONewQtyOut",
        "mode": "link",
        "links": [
            "a59e0f028ca6d20e",
            "73ee3e340f1c8545"
        ],
        "x": 1485,
        "y": 1600,
        "wires": []
    },
    {
        "id": "5188c107aacdca10",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "WOResetOut",
        "mode": "link",
        "links": [
            "d3689e1ea0ba5acf",
            "bcfdea68ae5c28d6"
        ],
        "x": 915,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d3689e1ea0ba5acf",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "WOResetIn",
        "links": [
            "5188c107aacdca10"
        ],
        "x": 2485,
        "y": 360,
        "wires": [
            [
                "4b72190efd5f3066"
            ]
        ]
    },
    {
        "id": "3329f0837a1cc4c6",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "WOStatOut",
        "mode": "link",
        "links": [
            "ca6052c851d1e8fb"
        ],
        "x": 305,
        "y": 1260,
        "wires": []
    },
    {
        "id": "0307b735208b6320",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "bf1de1d8fbee778b",
        "order": 5,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Machine Selection",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "className": "",
        "icon": "",
        "payload": "MachineSelection",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "de99d86374788bcd"
            ]
        ]
    },
    {
        "id": "e1182e309af7a34b",
        "type": "mqtt out",
        "z": "016a8a703bd64d79",
        "name": "CH051",
        "topic": "CH051",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "06aae9471921be4e",
        "x": 3020,
        "y": 80,
        "wires": []
    },
    {
        "id": "f403e7d905d76ee8",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Rates",
        "func": "flow.set(\"STDRate\",msg.payload.STDPPM);\nflow.set(\"MAXRate\",msg.payload.MAXPPM);\n\nmsg = {};\nmsg.payload = {};\nmsg.payload.Target_Run_Rate = flow.get(\"STDRate\");\nmsg.payload.Max_Rate = flow.get(\"MAXRate\");\nmsg.payload.Part_Number = flow.get(\"PartNum\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 80,
        "wires": [
            [
                "e1182e309af7a34b",
                "e1bfd39c5599ca1a",
                "6f0e815c54470fd2"
            ]
        ]
    },
    {
        "id": "7e8c35dfd4f07e81",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "USE THIS ONE - Send Machine Status",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://dv-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_LoadWOTimeLoginInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 3150,
        "y": 2820,
        "wires": [
            [
                "0d2f810cab502a04",
                "25fea6e315aa9915"
            ]
        ]
    },
    {
        "id": "5d82c3affb0a04fc",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "3c75836e726232e4",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Enter DownTime",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1320,
        "y": 840,
        "wires": [
            [
                "bfb1684dcebef03f"
            ]
        ]
    },
    {
        "id": "bfb1684dcebef03f",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "DT Entry Pop-Up ",
        "func": "msg.payload = {};\nmsg.payload.down = 3;\nmsg.topic = \"show\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 840,
        "wires": [
            [
                "71550c0f7ba91bc5"
            ]
        ]
    },
    {
        "id": "66fb3a2b28908b27",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "75c0ef918dcab1ab",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "One Time Add ",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1700,
        "wires": [
            [
                "dbb95ebb0f46d38c"
            ]
        ]
    },
    {
        "id": "dbb95ebb0f46d38c",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Show Pin",
        "func": "flow.set(\"Add\",true);\nmsg.payload = {\"group\":{\"show\":[\"1CH051_Pin\"],\"hide\":[\"1CH051_DSI\"]}};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1700,
        "wires": [
            [
                "98e0f9400478ae2b"
            ]
        ]
    },
    {
        "id": "98e0f9400478ae2b",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "change",
        "x": 920,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "d1b81ef9c295d971",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "AddNum",
        "mode": "link",
        "links": [
            "4f4f80f5d6ad7feb"
        ],
        "x": 765,
        "y": 2560,
        "wires": []
    },
    {
        "id": "4f4f80f5d6ad7feb",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "link in 4",
        "links": [
            "e46b1aa3dbb4dd5d",
            "d1b81ef9c295d971"
        ],
        "x": 1135,
        "y": 1640,
        "wires": [
            [
                "2453d6895ef44a63"
            ]
        ]
    },
    {
        "id": "edd59b2ac84a872b",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 3080,
        "wires": [
            [
                "381b695ab1a2a901"
            ]
        ]
    },
    {
        "id": "381b695ab1a2a901",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Get Flow Variables",
        "func": "msgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = flow.keys();\n\nvar len = msgElt.payload.length;\nvar i = 0;\n\nmsg.payload = {};\n\nfor (i=0;i<len;i++) {\n    a = msgElt.payload[i];\n    msg.payload[a] = flow.get(a);\n}\n\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\nmsg = {};\nmsg.payload = {};\nmsg.payload[\"sent\"] = 1;\n\n\nreturn [null,msg];",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = flow.keys();\n\nvar len = msgElt.payload.length;\nvar i = 0;\n\nmsg = {};\nmsg.payload = {};\n\nfor (i=0;i<len;i++) {\n    a = msgElt.payload[i];\n    msg.payload[a] = flow.get(a);\n    flow.set(a,flow.get(a),\"file\");\n}\nmsg.payload[\"sent\"] = 1;\nreturn [msg,null];",
        "libs": [],
        "x": 650,
        "y": 3080,
        "wires": [
            [
                "483fc09f78de93ef"
            ],
            []
        ],
        "inputLabels": [
            "Triggered"
        ],
        "outputLabels": [
            "On Message and On Stop",
            "On Start"
        ]
    },
    {
        "id": "483fc09f78de93ef",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "Flow variables",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 860,
        "y": 3080,
        "wires": []
    },
    {
        "id": "8ead688d50ec6ec1",
        "type": "file in",
        "z": "016a8a703bd64d79",
        "name": "Read Context",
        "filename": "/data/context/4a44a7a1246af426/flow.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 340,
        "y": 3120,
        "wires": [
            [
                "de41e8918270bccb"
            ]
        ]
    },
    {
        "id": "4bb10843f2168d55",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Get Flow Variables",
        "func": "msgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = Object.keys(msg.payload);\n\nvar len = msgElt.payload.length;\nvar i = 0;\n\nmsg.payload = {};\n\nfor (i=0;i<len;i++) {\n    a = msgElt.payload[i];\n    msg.payload[a] = flow.get(a,\"file\");\n    flow.set(a,msg.payload[a]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 3120,
        "wires": [
            [
                "483fc09f78de93ef"
            ]
        ]
    },
    {
        "id": "de41e8918270bccb",
        "type": "json",
        "z": "016a8a703bd64d79",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 490,
        "y": 3120,
        "wires": [
            [
                "4bb10843f2168d55"
            ]
        ]
    },
    {
        "id": "23113421670dca0d",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 3120,
        "wires": [
            [
                "8ead688d50ec6ec1"
            ]
        ]
    },
    {
        "id": "8cdc91885f52f790",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Total_Count",
        "func": "flow.set(\"Total_Count\", msg.payload.value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 900,
        "wires": [
            [
                "d3ec0eded4268dac",
                "2cfea27fee2d0978",
                "bff52a5cfda71f56"
            ]
        ]
    },
    {
        "id": "5a14d360a5de0aa2",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "Value",
        "property": "payload.attribute",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Good_Count",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Machine_Status",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Current_Run_Rate",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Total_Count",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Run_Register",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 690,
        "y": 840,
        "wires": [
            [
                "e9b13d0fc38cd949"
            ],
            [
                "4d92b49917625b5a",
                "1aa8572c6f077e34"
            ],
            [
                "4e608324f8a0f18b"
            ],
            [
                "8cdc91885f52f790"
            ],
            [
                "3c679292d6ec0a53"
            ]
        ]
    },
    {
        "id": "1aa8572c6f077e34",
        "type": "change",
        "z": "016a8a703bd64d79",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.value",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 740,
        "wires": [
            [
                "3461e438ea34a45e"
            ]
        ]
    },
    {
        "id": "a8c69a3494e29a64",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "23bb5756e5c49e5b",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Report Scrap",
        "tooltip": "",
        "color": "white",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1760,
        "wires": [
            [
                "6083f1412cd58d6d"
            ]
        ]
    },
    {
        "id": "6083f1412cd58d6d",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Show Pin",
        "func": "flow.set(\"Scrap\",true);\nmsg.payload = {\"group\":{\"show\":[\"1CH051_Pin\"],\"hide\":[\"1CH051_DSI\"]}};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1760,
        "wires": [
            [
                "8514db4a150ea0e7"
            ]
        ]
    },
    {
        "id": "8514db4a150ea0e7",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "change",
        "x": 920,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "e46b1aa3dbb4dd5d",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "Scrap",
        "mode": "link",
        "links": [
            "4f4f80f5d6ad7feb"
        ],
        "x": 805,
        "y": 2640,
        "wires": []
    },
    {
        "id": "d64e8b5fc3710a1f",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 780,
        "wires": []
    },
    {
        "id": "d095ef6edfe07b19",
        "type": "change",
        "z": "016a8a703bd64d79",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "save",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 320,
        "wires": [
            [
                "ec7c07a221b5bf03"
            ]
        ]
    },
    {
        "id": "8e8c8af054bd0221",
        "type": "subflow:c59719cd71299db1",
        "z": "016a8a703bd64d79",
        "name": "",
        "x": 1690,
        "y": 380,
        "wires": [
            [
                "f467582ecdfdb5a4",
                "d095ef6edfe07b19"
            ],
            []
        ]
    },
    {
        "id": "d33601343e7aead8",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Confirm",
        "func": "msg.payload = {\"group\":{\"show\":[\"1CH051_Machine\"],\"hide\":[\"1CH051_Notif\"]}};\nflow.set(\"OpStat\",30);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1480,
        "wires": [
            [
                "52bb747bd8d90835"
            ]
        ]
    },
    {
        "id": "52bb747bd8d90835",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "change",
        "x": 700,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "7a02e3a47bfc8546",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 860,
        "wires": []
    },
    {
        "id": "9042fbfc861b2d8d",
        "type": "subflow:ba7038a52b6c04be",
        "z": "016a8a703bd64d79",
        "name": "",
        "x": 640,
        "y": 2740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "876a27debc395690",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 1",
        "func": "msg.payload = {};\nmsg.payload.BadgeNumber = flow.get(\"Pass\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "b387c5434b3981d9",
        "type": "ui_switch",
        "z": "016a8a703bd64d79",
        "name": "",
        "label": "<size=5%>Labor ",
        "tooltip": "",
        "group": "56da9086b4c2e3c3",
        "order": 1,
        "width": "4",
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-2x fa-toggle-on ",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-2x fa-toggle-off",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "ecfebd55ee4be508",
                "2520d13fd2123b31"
            ]
        ]
    },
    {
        "id": "ecfebd55ee4be508",
        "type": "subflow:73c9668643fa63b3",
        "z": "016a8a703bd64d79",
        "d": true,
        "name": "Labor message",
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "3b977a7ea4b37de5"
            ],
            [
                "b387c5434b3981d9"
            ]
        ]
    },
    {
        "id": "3b977a7ea4b37de5",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "f4e20afdebd56ef7",
            "fe6942f43e7d63ac"
        ],
        "x": 415,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1677b81bd8761cfc",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1000,
        "y": 180,
        "wires": []
    },
    {
        "id": "f54cf7423c5574e4",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3060,
        "y": 200,
        "wires": []
    },
    {
        "id": "e1bfd39c5599ca1a",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2980,
        "y": 20,
        "wires": []
    },
    {
        "id": "34350f46e63959c5",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1680,
        "wires": []
    },
    {
        "id": "0e1fd6c2df0372f3",
        "type": "comment",
        "z": "016a8a703bd64d79",
        "name": "Confirm Tab",
        "info": "",
        "x": 90,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5ab2b033c2fd9cc8",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1060,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ca94246e87107f22",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 660,
        "y": 280,
        "wires": []
    },
    {
        "id": "b25f5217ca3ea57f",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 160,
        "wires": []
    },
    {
        "id": "d5f97680c7fe3255",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1220,
        "y": 300,
        "wires": []
    },
    {
        "id": "483dadc4dfd6d00f",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "404b8047ed725380",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 58",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1240,
        "y": 260,
        "wires": []
    },
    {
        "id": "26b73bd97ae61727",
        "type": "subflow:d440ce3753a1d478",
        "z": "016a8a703bd64d79",
        "name": "API call messages",
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "404b8047ed725380"
            ],
            [
                "d5f97680c7fe3255"
            ]
        ]
    },
    {
        "id": "b9b7678e3c583450",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set ShortOrder",
        "func": "if (flow.get('Good_Count') < flow.get('QTYShrink')) {\n  flow.set('ShortOrder', 1);\n  msg.payload.Machine = flow.get(\"Machine\");\n    msg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\n    msg.payload.Good = flow.get(\"Good_Count\");\n    msg.payload.QTY = flow.get(\"QTYShrink\");\n    msg.payload.WorkOrderNo = flow.get(\"WO#\");\n    msg.payload.QTYRemain = flow.get (\"QTYShrink\") - flow.get(\"Good_Count\");\n    msg.payload.Material = flow.get(\"Material\");\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1340,
        "wires": [
            [
                "6521b2addc6d933e"
            ]
        ]
    },
    {
        "id": "6521b2addc6d933e",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Header",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1340,
        "wires": [
            [
                "353006b088288b72",
                "5ab2b033c2fd9cc8"
            ]
        ]
    },
    {
        "id": "353006b088288b72",
        "type": "template",
        "z": "016a8a703bd64d79",
        "name": "Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n   \"title\" : \"SHORT ORDER - NEW WO CREATION REQUIRED\",\n  \"text\": \"Machine: {{payload.Machine}},\n           Branch Plant: {{payload.Branch_Plant}}, \n           WO#: {{payload.WorkOrderNo}},\n           Good_Count: {{payload.Good}}, \n\t\t   QTY: {{payload.QTY}},\n\t\t   QTYRemain: {{payload.QTYRemain}},\n\t\t   Material: {{payload.Material}}\"\n  \n  \n    }",
        "output": "str",
        "x": 900,
        "y": 1340,
        "wires": [
            [
                "d135ab653920e066",
                "5ab2b033c2fd9cc8"
            ]
        ]
    },
    {
        "id": "d135ab653920e066",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://pemnetsp.webhook.office.com/webhookb2/1736c664-6bed-4926-9223-2ae8b8f04734@14e34c25-dbe7-4374-a026-99d90b7392f3/IncomingWebhook/6656bdb939ec4a8b8a43dae29dd08cf7/4242fef8-d597-42c6-90e7-b0bfbc97f59c",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 1340,
        "wires": [
            [
                "5ab2b033c2fd9cc8"
            ]
        ]
    },
    {
        "id": "f931922a978db308",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "\nlet a = 0;\nlet b = \"CH.CH001.CH051.WO_Comp_DINT\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 40,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "681d93ea19aa50b4",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "let a = 2;\nlet b = \"CH.CH001.CH051.Run_Register\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 60,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "bd3f3859b5367de3",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "let a = flow.get(\"WO#\");\nlet b = \"CH.CH001.CH051.Work_Order_Number\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 100,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "837b8ec26d5672b4",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "let a = flow.get(\"QTYShrink\");\nlet b = \"CH.CH001.CH051.Target_WO_Quantity\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3360,
        "y": 140,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "8537dbfe71cf7bfd",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "let a = flow.get(\"PartNum\");\nlet b = \"CH.CH001.CH051.Part_Number\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3380,
        "y": 180,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "753b1368d9e87e63",
        "type": "mqtt out",
        "z": "016a8a703bd64d79",
        "name": "",
        "topic": "iotgateway/write",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "06aae9471921be4e",
        "x": 3720,
        "y": 80,
        "wires": []
    },
    {
        "id": "8fa18cb1de698637",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3900,
        "y": 200,
        "wires": []
    },
    {
        "id": "95a9147ccbe2bf98",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "On complete",
        "props": [
            {
                "p": "payload.value",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2490,
        "y": 60,
        "wires": [
            [
                "f931922a978db308"
            ]
        ]
    },
    {
        "id": "efd110adce2639fd",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "change",
        "x": 560,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2520d13fd2123b31",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Labor",
        "func": "flow.set(\"Labor\",msg.payload);\nif (msg.payload == true){\n    msg.payload = {\"group\":{\"show\":[\"1CH051_Pin\"],\"hide\":[\"1CH051_DSI\"]}};\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "efd110adce2639fd"
            ]
        ]
    },
    {
        "id": "d3faa55fb3d3ae31",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "On complete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 3510,
        "y": 320,
        "wires": [
            [
                "6f0e815c54470fd2"
            ]
        ]
    },
    {
        "id": "6f0e815c54470fd2",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "let a = flow.get(\"STDRate\");\nlet b = \"CH.CH001.CH051.Target_Run_Rate\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 320,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "9cf5a93313d3d49d",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "\nlet a = flow.get(\"EmployeeNumber\");\nlet b = \"CH.CH001.CH051.Operator_Badge_Number\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 360,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "a3812cc59f4657a4",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "On complete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 3510,
        "y": 360,
        "wires": [
            [
                "9cf5a93313d3d49d"
            ]
        ]
    },
    {
        "id": "73b715e89531ffd4",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "e9c9a1f593a08c29"
            ],
            [
                "01774f327758f603"
            ]
        ]
    },
    {
        "id": "e9c9a1f593a08c29",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 20",
        "func": "if (msg.payload.status == \"SUCCESS\") {\n  let timestamp = Date.now();\n    flow.set(\"storedData\", {\n    timestamp: timestamp,\n    data: msg.payload\n  });\n  \n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 580,
        "wires": [
            [
                "07bd590dbcfbeee2"
            ]
        ]
    },
    {
        "id": "01774f327758f603",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 21",
        "func": "if (msg.payload.status != \"SUCCESS\") {\n  let storedData = flow.get(\"storedData\") || {};\n  storedData.failedTimestamp = Date.now();\n  flow.set(\"storedData\", storedData);\n  return {\n    error: msg.payload.status,\n    payload: storedData.data\n  };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "2756e656f7ef7277"
            ]
        ]
    },
    {
        "id": "2756e656f7ef7277",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 22",
        "func": "let newData = msg.payload;\nlet storedData = flow.get(\"storedData\") || {};\nlet timestamp = Date.now();\nlet combinedData = {\n  timestamp: timestamp,\n  data: newData\n};\nif (storedData.data) {\n  combinedData.storedData = storedData;\n}\nreturn {\n  payload: JSON.stringify(combinedData)\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 640,
        "wires": [
            [
                "ee6f91db6e3b7f90"
            ]
        ]
    },
    {
        "id": "ee6f91db6e3b7f90",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 23",
        "func": "msg.payload = {};\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = msg.payload;\nmsgElt.payload = flow.keys();\nvar len = msgElt.payload.length;\nvar i = 0;\nfor (i=0;i<len;i++) {\n a = msgElt.payload[i];\n msg.payload[a] = flow.get(a);\n}\nreturn [msg,null];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 640,
        "wires": [
            [
                "bd0baf422ed8ad4a"
            ]
        ]
    },
    {
        "id": "07bd590dbcfbeee2",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 840,
        "y": 580,
        "wires": []
    },
    {
        "id": "bd0baf422ed8ad4a",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1100,
        "y": 580,
        "wires": []
    },
    {
        "id": "25fea6e315aa9915",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3010,
        "y": 2900,
        "wires": [
            [
                "ebf0e12a3a14755a"
            ],
            [
                "d66a41cfece319d0"
            ]
        ]
    },
    {
        "id": "ebf0e12a3a14755a",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 24",
        "func": "if (msg.payload.status == \"SUCCESS\") {\n  let timestamp = Date.now();\n    flow.set(\"storedData\", {\n    timestamp: timestamp,\n    data: msg.payload\n  });\n  \n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 2880,
        "wires": [
            [
                "f9aa32035f183ab7"
            ]
        ]
    },
    {
        "id": "f9aa32035f183ab7",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3320,
        "y": 2880,
        "wires": []
    },
    {
        "id": "d66a41cfece319d0",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 25",
        "func": "if (msg.payload.status != \"SUCCESS\") {\n  let storedData = flow.get(\"storedData\") || {};\n  storedData.failedTimestamp = Date.now();\n  flow.set(\"storedData\", storedData);\n  return {\n    error: msg.payload.status,\n    payload: storedData.data\n  };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3190,
        "y": 2920,
        "wires": [
            [
                "3181cb8cce28466a"
            ]
        ]
    },
    {
        "id": "3181cb8cce28466a",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 26",
        "func": "let newData = msg.payload;\nlet storedData = flow.get(\"storedData\") || {};\nlet timestamp = Date.now();\nlet combinedData = {\n  timestamp: timestamp,\n  data: newData\n};\nif (storedData.data) {\n  combinedData.storedData = storedData;\n}\nreturn {\n  payload: JSON.stringify(combinedData)\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3350,
        "y": 2920,
        "wires": [
            [
                "e73415b11cc8eb15"
            ]
        ]
    },
    {
        "id": "e73415b11cc8eb15",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 27",
        "func": "msg.payload = {};\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = msg.payload;\nmsgElt.payload = flow.keys();\nvar len = msgElt.payload.length;\nvar i = 0;\nfor (i=0;i<len;i++) {\n a = msgElt.payload[i];\n msg.payload[a] = flow.get(a);\n}\nreturn [msg,null];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 2920,
        "wires": [
            [
                "656f0621545cc309"
            ]
        ]
    },
    {
        "id": "656f0621545cc309",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3660,
        "y": 2920,
        "wires": []
    },
    {
        "id": "bff52a5cfda71f56",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 11",
        "func": "if (msg.payload == true) {\n    flow.set(\"LastBinCheckCount\", (flow.get(\"Good_Count\")+flow.get(\"GoodParts\")));\n    flow.set(\"GoodButton\", flow.get(\"GoodButton\")+1);\n}\nlet GoodParts = msg.payload.value - flow.get(\"LastBinCheckCount\")-flow.get(\"ScrapQTYTotal\");\nflow.set(\"GoodParts\", GoodParts);\nmsg.payload.value = flow.get(\"GoodParts\");\nif (msg.payload.value < 0){\n    flow.set(\"LastBinCheckCount\",msg.payload.value);\n    flow.set(\"GoodParts\", 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1020,
        "wires": [
            [
                "1a6fa8ef94f6b230",
                "65b379113ad46ca8",
                "2cfea27fee2d0978"
            ]
        ]
    },
    {
        "id": "65b379113ad46ca8",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "Good Parts",
        "group": "23bb5756e5c49e5b",
        "order": 1,
        "width": "4",
        "height": 2,
        "passthru": false,
        "label": "Good Parts: [{{msg.payload.value}} PCS]",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1220,
        "y": 1100,
        "wires": [
            [
                "bff52a5cfda71f56",
                "39e022459a712ba7"
            ]
        ]
    },
    {
        "id": "1a6fa8ef94f6b230",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "Bad Parts",
        "group": "23bb5756e5c49e5b",
        "order": 6,
        "width": "4",
        "height": "2",
        "passthru": false,
        "label": "Bad Parts: [{{msg.payload.value}} PCS]",
        "tooltip": "",
        "color": "",
        "bgcolor": "#871900",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1380,
        "y": 1040,
        "wires": [
            [
                "79947dfe2f84442e"
            ]
        ]
    },
    {
        "id": "79947dfe2f84442e",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 12",
        "func": "if (msg.payload == true) {\n    let goodCount = flow.get(\"Good_Count\");\n    let badCount = flow.get(\"GoodParts\");\n    let ScrapQTY = badCount;\n    flow.set('Scrap', true);\n    flow.set(\"BadButton\", flow.get(\"BadButton\")+1);\n    //flow.set(\"LastBinCheckCount\", (flow.get(\"Good_Count\")+flow.get(\"GoodParts\")));\n    //msg.payload = { ScrapQTY: flow.get(\"ScrapQTYTotal\")};\n    flow.set(\"GoodParts\", 0);\n    msg.payload = ScrapQTY;\n    msg2 = {};\n    msg2.payload = {};\n    msg2.payload.value = flow.get(\"Total_Count\");\n    return [msg,msg2];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 980,
        "wires": [
            [
                "2453d6895ef44a63",
                "2cfea27fee2d0978"
            ],
            [
                "bff52a5cfda71f56"
            ]
        ]
    },
    {
        "id": "39e022459a712ba7",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "\nlet a = flow.get(\"LastBinCheckCount\");\nlet b = \"CH.CH001.CH051.Good_Count\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 400,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "0d338ccb0e6a6710",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "\nlet a = flow.get(\"ScrapQTYTotal\");\nlet b = \"CH.CH001.CH051.Scrap_Count\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3700,
        "y": 440,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "3c679292d6ec0a53",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Run_Register",
        "func": "msg.payload.down = 0;\n\nif (flow.get(\"SetUp\")==true){\n    flow.set(\"RunSet\",2);\n    msg.enabled = false;\n    return msg\n} else if ((flow.get(\"SetUp\")==false)&&(msg.payload.value == 0)){\n    msg.payload.down = 3;\n    msg.enabled = true;\n    msg.topic = \"show\";\n    return msg\n}\n// This next piece will make sure that downtime only required if machine was in run\n// If machine was in set up and stopped, no downtime code needed, assuming down for set up still\n\n\n// 0 is stopped, 1 is running, 2 is set up",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 960,
        "wires": [
            [
                "5d82c3affb0a04fc",
                "755c3f3d9dc2e88d",
                "d3ec0eded4268dac"
            ]
        ]
    },
    {
        "id": "aad3465a58790310",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "link in 5",
        "links": [
            "115a378f88225544"
        ],
        "x": 3125,
        "y": 20,
        "wires": [
            [
                "f931922a978db308",
                "90b0243bdea56c1f",
                "681d93ea19aa50b4"
            ]
        ]
    },
    {
        "id": "c6cd66ad13495425",
        "type": "ui_button",
        "z": "016a8a703bd64d79",
        "name": "",
        "group": "3c75836e726232e4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set Up Complete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3550,
        "y": 520,
        "wires": [
            [
                "1d46907e5f2562b6",
                "4874523eaf0ccbaa"
            ]
        ]
    },
    {
        "id": "1d46907e5f2562b6",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set SetUp",
        "func": "//let a = 1;\n//let b = \"CH.CH001.CH051.Run_Register\";\n\n//msg.payload = [{\n//    \"id\":b,\n//    \"v\":a\n//    }];\n//msg.topic = \"PLC/write\";\nflow.set(\"SetUp\",false);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 500,
        "wires": [
            [
                "753b1368d9e87e63",
                "7df35dcfca3dd30f"
            ]
        ]
    },
    {
        "id": "620dbad75a0bbd48",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "link in 6",
        "links": [
            "29532f00a45bedb6"
        ],
        "x": 3505,
        "y": 400,
        "wires": [
            [
                "9cf5a93313d3d49d"
            ]
        ]
    },
    {
        "id": "1987c715632f6393",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 460,
        "wires": []
    },
    {
        "id": "ecfe25358fab1502",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n\n   };\n\nmsg.payload = {};\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\nmsg.payload.WorkOrderNo = 2355617;\nmsg.color = \"white\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 580,
        "wires": [
            [
                "ab4c2b93ca91a22f"
            ]
        ]
    },
    {
        "id": "ab4c2b93ca91a22f",
        "type": "http request",
        "z": "016a8a703bd64d79",
        "name": "GetWOHDRInfo",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetWOHDRInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2460,
        "y": 580,
        "wires": [
            [
                "4f383d39055dfe20"
            ]
        ]
    },
    {
        "id": "4f383d39055dfe20",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 64",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2660,
        "y": 600,
        "wires": []
    },
    {
        "id": "80c5f03d5ae0f392",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2050,
        "y": 580,
        "wires": [
            [
                "ecfe25358fab1502"
            ]
        ]
    },
    {
        "id": "90b0243bdea56c1f",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 20,
        "wires": []
    },
    {
        "id": "73ee3e340f1c8545",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "link in 7",
        "links": [
            "d9177396eac9a23b"
        ],
        "x": 3265,
        "y": 160,
        "wires": [
            [
                "837b8ec26d5672b4",
                "3c3b23b2b152e0c2"
            ]
        ]
    },
    {
        "id": "3c3b23b2b152e0c2",
        "type": "trigger",
        "z": "016a8a703bd64d79",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3500,
        "y": 600,
        "wires": [
            [
                "2f974953f5597477"
            ]
        ]
    },
    {
        "id": "2f974953f5597477",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "MSG Pop-Up",
        "func": "if (flow.get(\"AddNum\") == 0 && flow.get(\"ScrapQTY\") == 0){\n    msg.payload = {};\n    msg.payload = 'PLC WO QTY has been updated to: ' + flow.get(\"QTYShrink\") + ' pcs'\n} else if (flow.get(\"ScrapQTY\") == 0) {\n    msg.payload = {};\n    msg.payload = 'PLC WO QTY has been updated by: ' + flow.get(\"AddNum\") + ' pcs'\n} else {\n    msg.payload = {};\n    msg.payload = 'PLC WO QTY has been reduced by: ' + flow.get(\"ScrapQTY\") + ' pcs'   \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 600,
        "wires": [
            [
                "06b0131daa14cdd4",
                "8457b2eaea776922"
            ]
        ]
    },
    {
        "id": "06b0131daa14cdd4",
        "type": "ui_toast",
        "z": "016a8a703bd64d79",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Brankamp QTY Update",
        "x": 3850,
        "y": 600,
        "wires": []
    },
    {
        "id": "8457b2eaea776922",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3880,
        "y": 640,
        "wires": []
    },
    {
        "id": "2cfea27fee2d0978",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d3ec0eded4268dac",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 68",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8ff9a9fd54b4e9fc",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 28",
        "func": "flow.set(\"GoodParts\", 6000)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "afa9982bbe930c3c",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1240,
        "wires": [
            [
                "8ff9a9fd54b4e9fc"
            ]
        ]
    },
    {
        "id": "41de54131ab5eef3",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 960,
        "wires": []
    },
    {
        "id": "7df35dcfca3dd30f",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 70",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3860,
        "y": 520,
        "wires": []
    },
    {
        "id": "4e4b0a0a4e4f816d",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2380,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a8a10cc2.9d0ae",
        "type": "ui_template",
        "z": "016a8a703bd64d79",
        "group": "a29cf195d970aea1",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\nbody.nr-dashboard-theme {\n    font-size: 16x !important;\n}\n.md-toolbar-tools h1 {\n    font-size: 18px !important;\n}\n    .tabulator{\n        font-size:26px;\n    }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1900,
        "y": 80,
        "wires": [
            [
                "a2a717f1694717fa"
            ]
        ]
    },
    {
        "id": "0cf064a2c038cef2",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 30",
        "func": "msg.payload = {};\n\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\nmsg.payload.Good = flow.get(\"Good_Count\");\nmsg.payload.QTY = flow.get(\"QTYShrink\");\nmsg.payload.WorkOrderNo = flow.get(\"WO#\");\nmsg.payload.QTYRemain = flow.get (\"QTYShrink\") - flow.get(\"Good_Count\");\nmsg.payload.Material = flow.get(\"Material\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "5c62f3d4759f44cd"
            ]
        ]
    },
    {
        "id": "5c62f3d4759f44cd",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Header",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1400,
        "wires": [
            [
                "7d66fa2aba3da34e"
            ]
        ]
    },
    {
        "id": "7d66fa2aba3da34e",
        "type": "template",
        "z": "016a8a703bd64d79",
        "name": "Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n   \"title\" : \"WO Completed\",\n  \"text\": \"Machine: {{payload.Machine}},\n           Branch Plant: {{payload.Branch_Plant}}, \n           WO#: {{payload.WorkOrderNo}},\n           Good_Count: {{payload.Good}}, \n\t\t   QTY: {{payload.QTY}},\n\t\t   QTYRemain: {{payload.QTYRemain}},\n\t\t   Material: {{payload.Material}}\"\n  \n  \n    }",
        "output": "str",
        "x": 940,
        "y": 1400,
        "wires": [
            [
                "d135ab653920e066"
            ]
        ]
    },
    {
        "id": "9c047a661fda5815",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1460,
        "wires": [
            [
                "0cf064a2c038cef2"
            ]
        ]
    },
    {
        "id": "49bb314a69e94fcd",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Rates",
        "func": "msg = {};\nmsg.payload = {};\nmsg.payload.Target_Run_Rate = flow.get(\"STDRate\");\nmsg.payload.Max_Rate = flow.get(\"MAXRate\");\nmsg.payload.Part_Number = flow.get(\"PartNum\");;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 20,
        "wires": [
            [
                "e1182e309af7a34b",
                "e1bfd39c5599ca1a"
            ]
        ]
    },
    {
        "id": "e46080fd38a3a77c",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2610,
        "y": 20,
        "wires": [
            [
                "49bb314a69e94fcd"
            ]
        ]
    },
    {
        "id": "3f290330c63f30a0",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "",
        "property": "WO#",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "Indirect",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 1560,
        "wires": [
            [
                "36fac75f7ba09316"
            ]
        ]
    },
    {
        "id": "36fac75f7ba09316",
        "type": "switch",
        "z": "016a8a703bd64d79",
        "name": "",
        "property": "GoodParts",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1560,
        "wires": [
            [
                "99236297c90a43cb",
                "f2e992fbef175bc3"
            ],
            [
                "986c9daea216405b",
                "9a2fcaed48759bf1",
                "f2e992fbef175bc3"
            ]
        ]
    },
    {
        "id": "986c9daea216405b",
        "type": "link out",
        "z": "016a8a703bd64d79",
        "name": "WOComp",
        "mode": "link",
        "links": [
            "6ca1396880301da4",
            "af1c1780ff18f93a"
        ],
        "x": 1045,
        "y": 1600,
        "wires": []
    },
    {
        "id": "99236297c90a43cb",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "function 65",
        "func": "msg.payload = \"Please accept/reject final bin count\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1540,
        "wires": [
            [
                "eaaa3568c9ef966b",
                "f2e992fbef175bc3"
            ]
        ]
    },
    {
        "id": "9a2fcaed48759bf1",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Confirm",
        "func": "msg.payload = {\"group\":{\"hide\":[\"1CH051_Machine\"],\"show\":[\"1CH051_Notif\"]}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1500,
        "wires": [
            [
                "5376f9c6ec7f69be"
            ]
        ]
    },
    {
        "id": "5376f9c6ec7f69be",
        "type": "ui_ui_control",
        "z": "016a8a703bd64d79",
        "name": "",
        "events": "all",
        "x": 1160,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "f2e992fbef175bc3",
        "type": "debug",
        "z": "016a8a703bd64d79",
        "name": "debug 109",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1500,
        "wires": []
    },
    {
        "id": "eaaa3568c9ef966b",
        "type": "ui_toast",
        "z": "016a8a703bd64d79",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1310,
        "y": 1540,
        "wires": []
    },
    {
        "id": "4874523eaf0ccbaa",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Disable",
        "func": "msg.enabled = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 560,
        "wires": [
            [
                "c6cd66ad13495425"
            ]
        ]
    },
    {
        "id": "bcfdea68ae5c28d6",
        "type": "link in",
        "z": "016a8a703bd64d79",
        "name": "WOResetIn",
        "links": [
            "5188c107aacdca10"
        ],
        "x": 3255,
        "y": 520,
        "wires": [
            [
                "f8c9408af84c7679"
            ]
        ]
    },
    {
        "id": "f8c9408af84c7679",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Enable",
        "func": "msg.enabled = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3340,
        "y": 520,
        "wires": [
            [
                "c6cd66ad13495425"
            ]
        ]
    },
    {
        "id": "47167596ec379233",
        "type": "delay",
        "z": "016a8a703bd64d79",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2680,
        "y": 120,
        "wires": [
            [
                "f403e7d905d76ee8"
            ]
        ]
    },
    {
        "id": "3461e438ea34a45e",
        "type": "change",
        "z": "016a8a703bd64d79",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "16",
                "fromt": "str",
                "to": "Waiting",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "15",
                "fromt": "num",
                "to": "Start Up",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "14",
                "fromt": "num",
                "to": "Quality Hold",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "13",
                "fromt": "num",
                "to": "Out of Spec",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "12",
                "fromt": "num",
                "to": "Material Issue",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "11",
                "fromt": "num",
                "to": "Not Scheduled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "No DT Code",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "No Comms",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Running",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Changeover",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Stopped",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Scheduled Maint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Unplanned Maint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "Operator Maint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "7",
                "fromt": "num",
                "to": "Troubleshooting",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "8",
                "fromt": "num",
                "to": "Tool Change",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9",
                "fromt": "num",
                "to": "Thread Roller",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 740,
        "wires": [
            [
                "563ea19eaf08a8a7",
                "11cdf9339ac3e499"
            ]
        ]
    },
    {
        "id": "8898d5fa162b3c3a",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 790,
        "y": 1180,
        "wires": [
            [
                "5188c107aacdca10"
            ]
        ],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "d849f36a6f1643aa",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "Set Total_Count",
        "func": "flow.set(\"Total_Count\", 9000);\nmsg.payload = {};\nmsg.payload.value = 9000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "f00296a7b4495b3f",
        "type": "function",
        "z": "016a8a703bd64d79",
        "name": "WO Write",
        "func": "msg.payload = {};\nlet a = \"9444\";\nlet b = \"CH.CH001.CH051.Total_Count\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3040,
        "y": 660,
        "wires": [
            [
                "753b1368d9e87e63",
                "8fa18cb1de698637"
            ]
        ]
    },
    {
        "id": "88d66531c67c5bd8",
        "type": "inject",
        "z": "016a8a703bd64d79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2910,
        "y": 680,
        "wires": [
            [
                "f00296a7b4495b3f"
            ]
        ]
    },
    {
        "id": "f34bc96100c0f396",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n    'Authorization': 'Basic ' + Buffer.from('NODERED:L&M2023').toString('base64'),\n   };\n\nmsg.payload = {};\n\nmsg.payload.Machine = flow.get(\"Machine\");\n//msg.payload.Machine = \"\";\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "379641b58eb2f5d9"
            ]
        ]
    },
    {
        "id": "379641b58eb2f5d9",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "P553102AMLS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_P553102AMLS",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "9cec134a203b4150",
                "ac7560118e7e42a5",
                "57295fd6c61cede7",
                "95ce25bfa70cfc3d",
                "f5a12d090b511eae"
            ]
        ]
    },
    {
        "id": "76ffaa1e1aed12ba",
        "type": "ui_table",
        "z": "908514b9df30460d",
        "group": "eafabb231c5c985f",
        "name": "WO Queue",
        "order": 3,
        "width": 14,
        "height": 5,
        "columns": [
            {
                "field": "z_URAB_37",
                "title": "Machine Seq",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_DOCO_38",
                "title": "WO #",
                "width": "75",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CPIL_64",
                "title": "Material",
                "width": "150",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_KITL_42",
                "title": "Part #",
                "width": "200",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_UORG_118",
                "title": "Qty Ordered",
                "width": "75",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CMHR_100",
                "title": "Machine Hrs",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1890,
        "y": 240,
        "wires": [
            [
                "7ea6d552ee9d1677"
            ]
        ]
    },
    {
        "id": "9cec134a203b4150",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Reduce",
        "func": "msg.payload = msg.payload.ServiceRequest1.fs_P553102A_W553102AB.data.gridData.rowset\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 220,
        "wires": [
            [
                "028b7ca5ac533d5f"
            ]
        ]
    },
    {
        "id": "a2e27bdcf166b224",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "GetWOHDRInfo",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetWOHDRInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2380,
        "y": 240,
        "wires": [
            [
                "ab6a34a2206e213c",
                "9a05aa92053f9faa",
                "e804dec1edbb50c0",
                "f247b5f06f1351c1"
            ]
        ]
    },
    {
        "id": "3cd9939d282f8a1a",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n    'Authorization': 'Basic ' + Buffer.from('NODERED:L&M2023').toString('base64'),\n\n   };\n\nflow.set(\"OpSeq\", msg.payload.z_OPSQ_41);\nflow.set(\"Material\", msg.payload.z_CPIL_64);\nflow.set(\"OpStat\",19);\n\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\nmsg.payload.WorkOrderNo = msg.payload.z_DOCO_38;\nmsg.color = \"white\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 240,
        "wires": [
            [
                "d8934e7519be8b72",
                "a2e27bdcf166b224",
                "62d8a07e5312e01b"
            ]
        ]
    },
    {
        "id": "c864f1d6495018c4",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Part Number",
        "format": "{{msg.payload[\"Item Number\"]}}",
        "layout": "row-spread",
        "className": "",
        "x": 2870,
        "y": 160,
        "wires": []
    },
    {
        "id": "f87b12b0097a2ff9",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Part Type",
        "format": "{{msg.payload[\"WO Desc\"]}}",
        "layout": "row-spread",
        "className": "",
        "x": 2860,
        "y": 200,
        "wires": []
    },
    {
        "id": "408ec572341b4143",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "WO Qty + Shrink",
        "format": "{{msg.payload[\"Order + Shrink\"]}}",
        "layout": "row-spread",
        "className": "",
        "x": 2890,
        "y": 240,
        "wires": []
    },
    {
        "id": "a68574da30c668a6",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Raw Material",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3200,
        "y": 260,
        "wires": []
    },
    {
        "id": "ab6a34a2206e213c",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Filter T Array",
        "func": "var msgElt = {};\nmsgElt.payload = {};\nfor (var i = 0;i<(msg.payload.ToolNumberDetails.length);i++){\n    msgElt.payload = msg.payload.ToolNumberDetails[i].ToolItem\n    node.send(msgElt);  \n}\nreturn ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 280,
        "wires": [
            [
                "36c82fb8fa7148ad",
                "527e320b6ab2f080"
            ]
        ]
    },
    {
        "id": "36c82fb8fa7148ad",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "Look for T",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "cont",
                "v": "T",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2910,
        "y": 280,
        "wires": [
            [
                "a68574da30c668a6"
            ],
            [
                "322a7f54479ed093"
            ]
        ]
    },
    {
        "id": "322a7f54479ed093",
        "type": "join",
        "z": "908514b9df30460d",
        "name": "Tool Nums",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 3190,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d4971d19337d9c24",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Tranform Message",
        "func": "//msg.payload.timestamp = (msg.payload.timestamp-(msg.payload.timestamp%1000))/1000;\nvar outputMessages = [];\n\nfor(var index in msg.payload.values){\n    var msgElt = {};\n    msgElt.payload = {};\n\n    \n    // tagAttrs assumes a value like the following for the id key\n    // \"CF.CF001.Prgm_Visual_Factory_M1_CF007.VF.Cast_Number.DATA\"\n    var tagAttrs = msg.payload.values[index].id.split('.');\n    \n    //if(msgElt.payload.attribute )\n    msgElt.payload.department = tagAttrs[0];\n    msgElt.payload.device = tagAttrs[2];\n    msgElt.payload.attribute = tagAttrs[3];\n    msgElt.payload.value = msg.payload.values[index].v;\n    msgElt.payload.time = msg.payload.timestamp;\n    //msgElt.topic = \"APILBS\"\n    msgElt.complete = true;\n    outputMessages.push(msgElt);   \n}\n\nreturn [outputMessages];  ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 840,
        "wires": [
            [
                "88cda24cc5848f00"
            ]
        ]
    },
    {
        "id": "d9f1671a86d30351",
        "type": "mqtt in",
        "z": "908514b9df30460d",
        "name": "",
        "topic": "iotgateway",
        "qos": "2",
        "datatype": "json",
        "broker": "06aae9471921be4e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 840,
        "wires": [
            [
                "d4971d19337d9c24"
            ]
        ]
    },
    {
        "id": "88cda24cc5848f00",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "Machine Type",
        "property": "payload.device",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "CH052",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 1,
        "x": 520,
        "y": 840,
        "wires": [
            [
                "99187ea772453727"
            ]
        ]
    },
    {
        "id": "571d3d11b29d6179",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "113c3a8b49c860dd",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Good Count",
        "format": "<font color=\"green\" size=4%>{{payload.value}} PCS",
        "layout": "row-spread",
        "className": "",
        "x": 1095,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "50311a1bb29f6419",
        "type": "sort",
        "z": "908514b9df30460d",
        "name": "",
        "order": "ascending",
        "as_num": true,
        "target": "",
        "targetType": "seq",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload.z_URAB_37",
        "seqKeyType": "msg",
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "08706a94fb4f127d"
            ]
        ]
    },
    {
        "id": "028b7ca5ac533d5f",
        "type": "split",
        "z": "908514b9df30460d",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "50311a1bb29f6419"
            ]
        ]
    },
    {
        "id": "49ee90d0717ee2aa",
        "type": "join",
        "z": "908514b9df30460d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1730,
        "y": 240,
        "wires": [
            [
                "76ffaa1e1aed12ba",
                "9664fd318fb74902"
            ]
        ]
    },
    {
        "id": "6b9bb366810416da",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "WO",
        "format": "{{msg.payload.OrderNum}}",
        "layout": "row-spread",
        "className": "",
        "x": 2850,
        "y": 120,
        "wires": []
    },
    {
        "id": "d96424e05a86d4da",
        "type": "ui_form",
        "z": "908514b9df30460d",
        "name": "",
        "label": "<size=5%>Pre-Run Checklist:",
        "group": "ed958b7553b0b2b1",
        "order": 1,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "Shadow Board",
                "value": "ShadowBoard",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Loose Pieces",
                "value": "LoosePieces",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "No Leaks",
                "value": "NoLeaks",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "No Spills",
                "value": "NoSpills",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Clear Work Surface",
                "value": "Surface",
                "type": "checkbox",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ShadowBoard": false,
            "LoosePieces": false,
            "NoLeaks": false,
            "NoSpills": false,
            "Surface": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "Restart",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 210,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "ce960db73d1d95c3",
        "type": "ui_table",
        "z": "908514b9df30460d",
        "group": "eafabb231c5c985f",
        "name": "Ready + Waiting to be Scheduled",
        "order": 5,
        "width": 14,
        "height": 5,
        "columns": [
            {
                "field": "z_URAB_37",
                "title": "Machine Seq",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_DOCO_38",
                "title": "WO #",
                "width": "75",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CPIL_64",
                "title": "Material",
                "width": "150",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_KITL_42",
                "title": "Part #",
                "width": "200",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_UORG_118",
                "title": "Qty Ordered",
                "width": "75",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "z_CMHR_100",
                "title": "Machine Hrs",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1960,
        "y": 200,
        "wires": [
            [
                "3cd9939d282f8a1a"
            ]
        ]
    },
    {
        "id": "30b96481fe76ce1d",
        "type": "join",
        "z": "908514b9df30460d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1730,
        "y": 200,
        "wires": [
            [
                "ce960db73d1d95c3"
            ]
        ]
    },
    {
        "id": "8ba43dd8483aa44d",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "eafabb231c5c985f",
        "order": 4,
        "width": 14,
        "height": 1,
        "name": "",
        "label": "<font color=\"#097479\" size=4.5%>Ready + Waiting to be Scheduled",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 2070,
        "y": 160,
        "wires": []
    },
    {
        "id": "4f93a1e1fd7fcfac",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "GetBOMUM",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetBOMUM",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2790,
        "y": 380,
        "wires": [
            [
                "9815d56234560b13"
            ]
        ]
    },
    {
        "id": "e804dec1edbb50c0",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n    'Authorization': 'Basic ' + Buffer.from('NODERED:L&M2023').toString('base64'),\n   };\n\nmsg.payload = {};\n\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch = flow.get(\"Branch_Plant\");\nmsg.payload.ParentItem = flow.get(\"PartNum\");\nmsg.payload.ComponentItem = flow.get(\"Material\");\nmsg.payload.TypeBOM = \"M\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 380,
        "wires": [
            [
                "4f93a1e1fd7fcfac"
            ]
        ]
    },
    {
        "id": "82c75f177d34096e",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "token",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "099b0faed6b7c08c"
            ]
        ]
    },
    {
        "id": "90db50d965cc6395",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "GetAvailability",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetAvailability",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "cda4993304e52002",
                "a7c0e070a2e3ccf3",
                "fe64c67dfe372baa",
                "59b827d6ad7fd8f9"
            ]
        ]
    },
    {
        "id": "099b0faed6b7c08c",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n    'Authorization': 'Basic ' + Buffer.from('NODERED:L&M2023').toString('base64'),\n   };\n\nmsg.payload = {};\n\nmsg.payload.Location = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 320,
        "wires": [
            [
                "90db50d965cc6395",
                "a7c0e070a2e3ccf3"
            ]
        ]
    },
    {
        "id": "a7c0e070a2e3ccf3",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "Get Avail",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "cda4993304e52002",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Reduce",
        "func": "msg.payload.len = msg.payload.ServiceRequest1.fs_P5541271_W5541271A.data.gridData.rowset.length;\n\nif (msg.payload.len == 0) {\n    msg.payload = 0;\n} else {\n    msg.payload = (Number (msg.payload.ServiceRequest1.fs_P5541271_W5541271A.data.gridData.rowset[0].z_PQOH_450));\n}\n\nflow.set(\"LBSIssued\",msg.payload)\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 320,
        "wires": [
            [
                "a7c0e070a2e3ccf3"
            ]
        ]
    },
    {
        "id": "66b45c8afb735494",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "LBSRemaining Calc",
        "func": "msg.payload = {};\nmsg.payload.LBSPerPcs = flow.get(\"LBSperPC\");\nmsg.payload.LBSIssued = flow.get(\"LBSIssued\");\nmsg.payload.Total_Count = flow.get(\"Total_Count\"); \n\nmsg.payload.LBSUsed = Number((msg.payload.Total_Count*msg.payload.LBSPerPcs).toFixed(0));\nmsg.payload.LBSRemain = Number((msg.payload.LBSIssued-msg.payload.LBSUsed).toFixed(0));\n\n\nflow.set(\"LBSRemain\",msg.payload.LBSRemain);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "dd71564c4e07b633",
                "1ac1aa9c31681168"
            ]
        ]
    },
    {
        "id": "dd71564c4e07b633",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "113c3a8b49c860dd",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Remaining Material",
        "format": "<font color=\"green\" size=4%>{{payload.LBSRemain}} LBS",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 420,
        "wires": []
    },
    {
        "id": "9a05aa92053f9faa",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Flow Var",
        "func": "flow.set(\"WO#\", msg.payload.OrderNum);\nflow.set(\"PartNum\", msg.payload[\"Item Number\"]);\nflow.set(\"QTYShrink\",msg.payload[\"Order + Shrink\"]);\nflow.set(\"Desc\",msg.payload[\"WO Desc\"]);\n//flow.set(\"Workcenter\", msg.payload[\"\"])\nflow.set(\"ScrapQTY\",0);\nflow.set(\"ScrapQTYTotal\",0);\nflow.set(\"AddNum\",0);\nflow.set(\"Scrap\",false);\nflow.set(\"LastBinCheckCount\",0);\nflow.set(\"GoodParts\",0);\nflow.set(\"SetUp\",true);\nflow.set(\"GoodButton\",0);\nflow.set(\"BadButton\",0);\nflow.set(\"Good_Count\", 0)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 240,
        "wires": [
            [
                "6b9bb366810416da",
                "c864f1d6495018c4",
                "f87b12b0097a2ff9",
                "408ec572341b4143",
                "527e320b6ab2f080",
                "c6993881a6b8f3cb",
                "a98dfbcdcd3ced93",
                "0641ea45eb5a4901"
            ]
        ]
    },
    {
        "id": "9815d56234560b13",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set LBSperPC",
        "func": "flow.set(\"LBSperPC\",msg.payload.Quantity)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2980,
        "y": 380,
        "wires": [
            [
                "afb0a31c8d2a3507"
            ]
        ]
    },
    {
        "id": "b932ae19bac7b0b6",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Good_Count",
        "func": " //BC MACHINE IS OFFLINE RN\nflow.set(\"Good_Count\",msg.payload.value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 700,
        "wires": [
            [
                "571d3d11b29d6179"
            ]
        ]
    },
    {
        "id": "4214cd85e7548124",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "Trigger LBS Remaining",
        "props": [],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "66b45c8afb735494",
                "133aaf2981da84fc"
            ]
        ]
    },
    {
        "id": "1ac1aa9c31681168",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "LBSRemain",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "afb0a31c8d2a3507",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "LBS/PC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3250,
        "y": 380,
        "wires": []
    },
    {
        "id": "7cf3288576b39256",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "Response from JDE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 2780,
        "wires": []
    },
    {
        "id": "53709c120b8da409",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Machine_Status",
        "func": "\nflow.set(\"MachineStatus\",msg.payload);\nconst time = new Date();\nconst options = {hour12:false, timestyle:\"short\", timeZone:\"EST\"};\nvar timejde = time.toLocaleTimeString('en-US', options);\ntimejde = timejde.replace(\":\",\"\");\ntimejde = timejde.replace(\":\",\"\");\nflow.set(\"TagTime\", timejde);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "feef7f52c0300cb1",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "TimeRemain",
        "active": false,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "e9f05054a09f53a6",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "Send Machine Status",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://dv-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORC_UpdateRoutingQtyCompletions",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 3100,
        "y": 2780,
        "wires": [
            [
                "7cf3288576b39256",
                "9c66d81432cd853c"
            ]
        ]
    },
    {
        "id": "7a823d67f81a4d88",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Rate",
        "func": "if (msg.payload.value == 0){\n} else {\n    flow.set(\"Rate\",msg.payload.value);\n}\n\nconst time = new Date();\nconst options = {hour12:false, timestyle:\"short\", timeZone:\"EST\"};\nmsg.payload.timejde = time.toLocaleTimeString('en-US', options);\nmsg.payload.timejde = msg.payload.timejde.replace(\":\",\"\");\nmsg.payload.timejde = msg.payload.timejde.replace(\":\",\"\");\nflow.set(\"TagTimeRate\", msg.payload.timejde);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 860,
        "wires": [
            [
                "5d86a5aa19e5299e",
                "544b9e6c7eac9434"
            ]
        ]
    },
    {
        "id": "5d86a5aa19e5299e",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "113c3a8b49c860dd",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Rate",
        "format": "<font color=\"green\" size=4%>{{payload.value}} PPM",
        "layout": "row-spread",
        "className": "",
        "x": 1015,
        "y": 860,
        "wires": [],
        "l": false
    },
    {
        "id": "edc98e382ad0b92d",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "113c3a8b49c860dd",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "RemainTime",
        "label": "<font color={{msg.color}} size=4% >{{payload.name}}",
        "format": "<font color={{msg.color}} size=4%>{{payload.RemainTime}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 500,
        "wires": []
    },
    {
        "id": "133aaf2981da84fc",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set RemainTime",
        "func": "msg.payload = {};\n\nmsg.payload.RemainPCS = flow.get(\"QTYShrink\") - flow.get(\"Good_Count\");\nmsg.payload.Rate = flow.get(\"Rate\");\nmsg.payload.RemainTime = msg.payload.RemainPCS/msg.payload.Rate;//MIN\nmsg.payload.RemainTime = Number((msg.payload.RemainTime/60).toFixed(2)); //HR\n\nif(msg.payload.RemainPCS >= 0){\n    msg.payload.name = \"Time Remaining\";\n    msg.color = \"green\";\n    msg.payload.hours = Math.floor(msg.payload.RemainTime);\n    min = msg.payload.RemainTime - msg.payload.hours;\n    min =  Math.floor((min*60));\n    msg.payload.RemainTime = msg.payload.hours+\" H \"+min+\" M\";\n    flow.set(\"RemainTime\", msg.payload.RemainTime);\n}\nelse {\n    msg.payload.name = \"Over Run By\";\n    msg.color = \"yellow\";\n    msg.payload.hours = Math.ceil(msg.payload.RemainTime);\n    min = msg.payload.RemainTime - msg.payload.hours;\n    min =  Math.ceil((min*60));\n    msg.payload.RemainTime = -1*msg.payload.hours+\" H \"+-1*min+\" M\";\n    flow.set(\"RemainTime\", msg.payload.RemainTime);\n}\n\nreturn msg;\n\n// Determine text color\n// Round down to get Hours alone if positive, Round up if negative\n// Same with getting minutes alone\n// Form displayed message",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "edc98e382ad0b92d",
                "feef7f52c0300cb1"
            ]
        ]
    },
    {
        "id": "3e1bd1fa7223f216",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "API: MLS",
        "info": "",
        "x": 100,
        "y": 240,
        "wires": []
    },
    {
        "id": "3c11eb9be9f6a38f",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "API: Material Released",
        "info": "",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "53cbab2fad64add0",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "API :LBS/PC",
        "info": "",
        "x": 2630,
        "y": 340,
        "wires": []
    },
    {
        "id": "b75c70ba54a23441",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "Calc + Display: LBS + Time Remaining",
        "info": "",
        "x": 240,
        "y": 380,
        "wires": []
    },
    {
        "id": "9ead2ed50149cbaf",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "KepserverEX Machine Data + Display",
        "info": "",
        "x": 240,
        "y": 780,
        "wires": []
    },
    {
        "id": "c70f3edcb1e5a6a8",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "WO Completed?",
        "group": "113c3a8b49c860dd",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "WO Completed?",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 610,
        "y": 1560,
        "wires": [
            [
                "cfa39f18294697bb"
            ]
        ]
    },
    {
        "id": "a75d3775bb96dd77",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set New WO QTY",
        "func": "if (flow.get(\"Add\") == true){\n    test = flow.get(\"QTYShrink\")+msg.payload;\n    flow.set(\"QTYShrink\",test);\n} if(flow.get(\"Scrap\")== true){\n    test = msg.payload;\n    flow.set(\"ScrapQTYTotal\", flow.get(\"ScrapQTYTotal\")+test);\n    flow.set(\"ScrapQTY\",0);\n}\nmsg.payload = test;\nflow.set(\"Add\",false);\nflow.set(\"Scrap\",false);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1640,
        "wires": [
            [
                "08590566bd7679d6",
                "847bedc6c269fc4c",
                "544cecb834dfeed3"
            ]
        ]
    },
    {
        "id": "c6dea51c24551448",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "Wire Run Out",
        "group": "113c3a8b49c860dd",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Accept Wire Run Out: {{msg.payload.RunOutQty}} PCS",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 800,
        "y": 1640,
        "wires": [
            [
                "a56e490319c75d8c"
            ]
        ]
    },
    {
        "id": "70c20c2add03e2f5",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set RunOutQty",
        "func": "msg.payload = {};\nmsg.payload.RunOutQty = Math.ceil(flow.get(\"LBSRemain\")/flow.get(\"LBSperPC\")).toLocaleString(\"en-US\");\nflow.set(\"RunOutQty\",msg.payload.RunOutQty);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1640,
        "wires": [
            [
                "c6dea51c24551448"
            ]
        ]
    },
    {
        "id": "77c88c27782e8738",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "Go to Run",
        "events": "change",
        "x": 370,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e459bddb36577f7d",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "a58a958ac73f6b30",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "WO Set Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "#0b5b7d",
        "className": "<body>div {white-space: none;}</body>",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"1CH052_WORunning\",\"1CH052_MaintWO\",\"1CH052_QC\",\"1CH052_DSI\",\"1CH052_Machine\",\"1CH052_DownTime\",\"1CH052_Notif\"],\"show\":[\"1CH052_MachineSchedule\",\"1CH052_Checklist\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "77c88c27782e8738"
            ]
        ]
    },
    {
        "id": "174c1a687c4f1e82",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "a58a958ac73f6b30",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "RUN Screen",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"1CH052_MachineSchedule\",\"1CH052_Checklist\",\"1CH052_MaintWO\",\"1CH052_Notif\"],\"show\":[\"1CH052_WORunning\",\"1CH052_DSI\",\"1CH052_QC\",\"1CH052_Machine\",\"1CH052_DownTime\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "77c88c27782e8738"
            ]
        ]
    },
    {
        "id": "9f7fddc8a216a8e0",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "a58a958ac73f6b30",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Maint",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"1CH052_MachineSchedule\",\"1CH052_Checklist\",\"1CH052_WORunning\",\"1CH052_DSI\",\"1CH052_QC\",\"1CH052_Machine\",\"1CH052_DownTime\",\"1CH052_Notif\"],\"show\":[\"1CH052_MaintWO\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "77c88c27782e8738"
            ]
        ]
    },
    {
        "id": "f9ec05f3770fce58",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set API Params - Report Out 30+endtime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.Quantity = flow.get(\"Good_Count\")-flow.get(\"CurrentCount\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = flow.get(\"Status\");\nmsg.payload.EndTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = flow.get(\"TyHrs\");\n\nmsg.topic = 'token';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1240,
        "wires": [
            [
                "37118b9aa2543b14"
            ]
        ]
    },
    {
        "id": "cfc8aae1a2f416e3",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2940,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "9ecec722e07d995a",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "Send to JDE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 2660,
        "wires": []
    },
    {
        "id": "408b22bed7fc10ab",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set RunSet",
        "func": "msg.payload.down = 0;\nif (msg.payload.value == \"2\") {\n    flow.set(\"RunSet\",2);\n    msg.enabled = false;\n    msg.payload.value = flow.get(\"RunSet\");\n    return msg\n} else if (msg.payload.value == \"1\") {\n    flow.set(\"RunSet\",1);\n    msg.enabled = false;\n    msg.payload.value = flow.get(\"RunSet\");\n    return msg\n} else if (msg.payload.value == \"3\"){\n\n// This next piece will make sure that downtime only required if machine was in run\n// If machine was in set up and stopped, no downtime code needed, assuming down for set up still\n\n    if(flow.get(\"RunSet\") == 1){\n        msg.payload.down = 3;\n        msg.enabled = true;\n        msg.topic = \"show\";\n        msg.payload.value = flow.get(\"RunSet\");\n        return msg\n    } \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 800,
        "wires": [
            [
                "8c71d52d428fef4b"
            ]
        ]
    },
    {
        "id": "4a84e8f275e5be6e",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "St = 30",
        "func": "\nflow.set(\"Status\",\"30\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1240,
        "wires": [
            [
                "f9ec05f3770fce58",
                "8a75f28a7f992c73"
            ]
        ]
    },
    {
        "id": "2da5f4a379f6e447",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Check WO Status",
        "func": "msg.payload = {}\nmsg.payload.Good = flow.get(\"Good_Count\");\nmsg.payload.QTY = flow.get(\"QTYShrink\");\nmsg.enabled = true;\nmsg.background = \"green\";\n\n//msg.payload.Good = 5000;\n//msg.payload.QTY = 5000;\n\n\nif (msg.payload.Good < msg.payload.QTY){\n    msg.notif = true;\n\n} else {\n    msg.notif = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1560,
        "wires": [
            [
                "8233dca47a860d58"
            ]
        ]
    },
    {
        "id": "6ef906361a102014",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "Trigger",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 135,
        "y": 1560,
        "wires": [
            [
                "2da5f4a379f6e447"
            ]
        ],
        "l": false
    },
    {
        "id": "78c430780d840ee3",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Variables",
        "func": "\nflow.set(\"Branch_Plant\",\"111001\");\nflow.set(\"Machine\",\"1CH052\");\nflow.set(\"WCNum\",141187052);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nflow.set(\"Branch_Plant\",\"111001\");\nflow.set(\"Machine\",\"1CH052\");\nflow.set(\"BrankampMachineID\",30);\nflow.set(\"MachineName\",\"CH05\");",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "614cd34aa0bfef6b",
        "type": "filter",
        "z": "908514b9df30460d",
        "name": "Filter Out Op Stat",
        "property": "payload.z_OPST_51",
        "propertyType": "msg",
        "asArray": false,
        "itemProperty": "z_DOCO_38",
        "itemPropertyType": "item",
        "rules": [
            {
                "t": "neq",
                "v": "20",
                "vt": "num",
                "output": 1
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1390,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "08706a94fb4f127d",
        "type": "filter",
        "z": "908514b9df30460d",
        "name": "Filter Out Op Stat",
        "property": "payload.z_URAB_37",
        "propertyType": "msg",
        "asArray": false,
        "itemProperty": "payload",
        "itemPropertyType": "item",
        "rules": [
            {
                "t": "eq",
                "v": "999",
                "vt": "str",
                "output": 1
            },
            {
                "t": "neq",
                "v": "999",
                "vt": "num",
                "output": 2
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1570,
        "y": 220,
        "wires": [
            [
                "30b96481fe76ce1d"
            ],
            [
                "49ee90d0717ee2aa"
            ]
        ]
    },
    {
        "id": "bdcb909816801bee",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "API : WODetail",
        "info": "",
        "x": 2380,
        "y": 280,
        "wires": []
    },
    {
        "id": "68d535f395329cb1",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "113c3a8b49c860dd",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "<font color=\"green\" size=4%>Status",
        "format": "<font color=\"green\" size=4%>{{payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1315,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "5dd83005c2559b8b",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "TyHrs=2 - Report Out 20+endtime",
        "func": "msg.payload = {};\n\nmsg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.Quantity = flow.get(\"Good_Count\")-flow.get(\"CurrentCount\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"20\";\nmsg.payload.Time = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\n//msg.payload.TyHrs = 2;\n\nmsg.payload.timestamp = new Date();\nconst date = new Date(msg.payload.timestamp)\nconst options = {year: 'numeric', month: 'numeric', day: 'numeric'};\nmsg.payload.timestamp = date.toLocaleDateString('en-US', options)\n\nflow.set(\"ReportCount\",0);\nflow.set(\"CurrentCount\",flow.get(\"Good_Count\"));\n\nmsg.topic = 'token';\nreturn msg;\n\n// USE Equipment Number\n// Test Shift code 1 or 2\n// TyHrs - 2 set up, 1 run, 4 - good pcs, 5 - scrap pcs\n// status is being handled in ORCH",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2660,
        "wires": [
            [
                "cfc8aae1a2f416e3",
                "9ecec722e07d995a"
            ]
        ]
    },
    {
        "id": "35039c08710a13be",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "TyHrs=1 - Report Out 20+begintime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"20\";\nmsg.payload.BeginTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = 1;\n\nmsg.topic = 'token';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2700,
        "wires": [
            [
                "cfc8aae1a2f416e3",
                "9ecec722e07d995a"
            ]
        ]
    },
    {
        "id": "93b5c6d62af9dd33",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "TyHrs Auto Rule",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2260,
        "y": 2640,
        "wires": [
            [
                "5dd83005c2559b8b",
                "35039c08710a13be"
            ],
            [
                "2cf885dc85759262",
                "daf1b65f5b228462"
            ]
        ]
    },
    {
        "id": "2cf885dc85759262",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "TyHrs=1 - Report Out 20+endtime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.Quantity = flow.get(\"Good_Count\")-flow.get(\"CurrentCount\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"20\";\nmsg.payload.EndTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = 1;\n\nflow.set(\"ReportCount\",0);\nflow.set(\"CurrentCount\",flow.get(\"Good_Count\"));\n\nmsg.topic = 'token';\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2740,
        "wires": [
            [
                "cfc8aae1a2f416e3",
                "9ecec722e07d995a"
            ]
        ]
    },
    {
        "id": "daf1b65f5b228462",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "TyHrs=2 - Report Out 19+begintime",
        "func": "msg.payload = {};\n\n//msg.payload.EmployeeNumber = flow.get(\"Badge\");\nmsg.payload.OrderNumber= flow.get(\"WO#\");\nmsg.payload.OperSeq = flow.get(\"OpSeq\");\nmsg.payload.ShiftCode = \"1\";\nmsg.payload.St = \"19\";\nmsg.payload.BeginTime = flow.get(\"TagTime\");\nmsg.payload.EquipmentNumber = flow.get(\"Machine\");\nmsg.payload.TyHrs = 2;\n\nmsg.topic = 'token';\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 2780,
        "wires": [
            [
                "cfc8aae1a2f416e3",
                "9ecec722e07d995a"
            ]
        ]
    },
    {
        "id": "155dfbbedb47ee37",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "TyHrs Button Rule",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 2740,
        "wires": [
            [
                "35039c08710a13be"
            ],
            [
                "daf1b65f5b228462"
            ]
        ]
    },
    {
        "id": "8e4f7e0c9b9bc966",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "TyHrs Button Rule",
        "property": "payload.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2270,
        "y": 2780,
        "wires": [
            [
                "2cf885dc85759262"
            ],
            [
                "5dd83005c2559b8b"
            ]
        ]
    },
    {
        "id": "f6a347777ba25a8a",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "ON/OFF",
        "property": "payload.labor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2080,
        "y": 2760,
        "wires": [
            [
                "155dfbbedb47ee37"
            ],
            [
                "8e4f7e0c9b9bc966"
            ]
        ]
    },
    {
        "id": "8b42e9c902121ea7",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "ON/OFF",
        "property": "payload.labor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2100,
        "y": 2640,
        "wires": [
            [
                "93b5c6d62af9dd33"
            ],
            []
        ]
    },
    {
        "id": "37118b9aa2543b14",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Reset WO Info",
        "func": "//*** MUST BE AFTER STATUS 30 MESSAGE SENT TO API ***//\n\nflow.set(\"RemainTime\",\"\");\n\nmsg.payload = {};\n\nmsg.payload.OrderNum = \"Indirect\";\nmsg.payload[\"Item Number\"] = \"\";\nmsg.payload[\"WO Desc\"] = \"\";\nmsg.payload[\"Order + Shrink\"] = \"\";\n\nflow.set(\"Status\",\"20\")\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1240,
        "wires": [
            [
                "b5ff88a04e4f7d14"
            ]
        ]
    },
    {
        "id": "db37ddf139086377",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Stat",
        "func": "if (flow.get(\"Status\") == \"30\"){\n    msg.payload = \"NA\";\n} else {\n    msg.payload = {};\n    msg.payload.labor = flow.get(\"Labor\");\n    msg.payload.value = flow.get(\"TyHrs\");\n    msg.payload.EmployeeNumber = flow.get(\"EmployeeNumber\")\n\n}\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 2760,
        "wires": [
            [
                "f6a347777ba25a8a",
                "c58842d82630bf0a"
            ]
        ]
    },
    {
        "id": "d8934e7519be8b72",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "a58a958ac73f6b30",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "Machine #",
        "label": "",
        "format": "<font color={{msg.color}} size=5%>{{payload.Machine}}",
        "layout": "row-spread",
        "className": "",
        "x": 2380,
        "y": 340,
        "wires": []
    },
    {
        "id": "6cb9d899f3d86252",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "eafabb231c5c985f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reload MLS",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "78c430780d840ee3",
                "57295fd6c61cede7",
                "f34bc96100c0f396",
                "099b0faed6b7c08c"
            ]
        ]
    },
    {
        "id": "1a9a1167dbc1839b",
        "type": "trigger",
        "z": "908514b9df30460d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1330,
        "y": 880,
        "wires": [
            [
                "3199cc2d4bf28845"
            ]
        ]
    },
    {
        "id": "3199cc2d4bf28845",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "",
        "property": "payload.down",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1470,
        "y": 880,
        "wires": [
            [
                "3177b6f415836e3e",
                "38417e97f07ae8c4"
            ]
        ]
    },
    {
        "id": "3177b6f415836e3e",
        "type": "ui_template",
        "z": "908514b9df30460d",
        "group": "073be19344c1434a",
        "name": "DownTime",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <h2 style=\"margin:10px\">DownTime Code</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n\n           <div layout=\"row\" layout-align=\"center\">\n                <div class=\"number_placeholder\">\n                    {{passcode}}\n                </div>\n\n            </div>\n            \n            <div layout=\"column\" layout-align=\"center\" style=\"margin-top: 10px\">\n                <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('ToolChange')\">ToolChange</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Changeover')\">Changeover</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Maintenance')\">Maintenance</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Troubleshooting')\">Troubleshooting</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('NotScheduled')\">NotScheduled</md-button>\n                    </div>\n\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('OutofSpec')\">OutofSpec</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('QualityHold')\">QualityHold</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add('Other')\">Other</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"confirm()\">\n                            <ng-md-icon icon=\"done\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"delete()\">\n                            <ng-md-icon icon=\"arrow_back\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </div>\n            </div> \n          \n        </div> <!--dialog_body-->\n    </div> <!--dialog_content-->\n</div>  <!--dialog-->\n\n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n    position: absolute;\n    background-color: #fff;\n    left: calc(50% - 170px);\n    top: 30px;\n    border-radius: 10px;\n    padding: 0;\n    width: 500px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Media query for smartphones (to Fix?) */\n@media only screen and (min-device-width : 375px) and (max-device-width : 667px) { \n    .dialog_content {\n    margin-top: 5%;\n    margin-left: 5%;\n}\n}\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {top: -300px; opacity: 0} \n    to {top: 0; opacity: 1}\n}\n\n@keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: #03A9F4;\n    border-radius: 10px 10px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n/* __ */\n.number_placeholder{\n    width: 400px;\n    height: 34px;\n    margin: 10px;\n    font-size: 20pt;\n    text-align: center;\n    border-bottom: 1px solid black;\n}\n\n/* Number container */\n.number_box{\n    margin: 5px;\n}\n\n/* Buttons style */\n.pin {\n    min-height: 50px;\n    min-width: 50px;\n    font-weight: bold;\n    margin: 0px 10px 10px 0px;\n    box-shadow: 4px 4px 6px 0 #dadada;\n    background-color: #30B6F6;\n    color: #fff;\n}\n\n.pin:not([disabled]):hover {\n    background-color: #03A9F4;\n}\n/* WHAT IS THIS? */\n.btn1 {\n  color : rgb(49, 46, 46);\n  background-color: rgba(255, 222, 121, 0.96);\n  border-radius: 10px 0 0 10px;\n  font-size: 16px;\n}\n\n.btn1:not([disabled]):hover {\n  background-color: rgba(107, 103, 91, 0.96);\n  color: white;\n}\n\n.btn1[disabled] {\n  color : rgb(187, 187, 187);\n  background-color: rgba(230, 230, 230, 0.96);\n}\n\n</style>\n\n<script>\n\n/**\n * pin_dialog.js\n * Node-Red UI template for Node-Red Dashboard. \n * Custom dialog that asks for a PIN to allow actions\n * Enjoy it :). \n * -- Daniel\n *\n *\n * @license The Unlicense, http://unlicense.org/\n * @version 0.2\n * @author  Daniel Lando, https://github.com/robertsLando\n * @updated 2019-03-18\n * @link    ----\n *\n *\n */\n\nvar dialog;\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    scope.payload = \"\";\n    scope.inited = true;\n    \n    scope.init = function() {\n        scope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //remove any previously added pin dialog\n        $('.dialog').remove();\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body);\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n    }\n    \n    scope.add = function(value) {\n        if(scope.passcode.length < 1) {\n            scope.passcode = scope.passcode + value;\n            if(scope.passcode.length == 1) {\n                console.log(\"The four digit code was entered\");\n                   \n            }\n        }\n    }\n \n    scope.delete = function() {\n        if(scope.passcode.length > 0) {\n            scope.passcode = scope.passcode.substring(0, scope.passcode.length - scope.passcode.length);\n        }\n    }\n    \n    scope.confirm = function() {\n        if(scope.passcode.length > 0) {\n            scope.send({topic: \"Last Downtime Code: \", payload : scope.passcode});\n            scope.closeDialog();\n            scope.passcode = \"\";\n            scope.payload = \"\";\n        }\n    }\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n                   if(scope.inited){\n                        scope.payload = data.payload;\n                        scope.showDialog();\n                   }\n                   else\n                        scope.inited = true;\n                break;\n                case \"close\": \n                    scope.closeDialog(); \n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1650,
        "y": 880,
        "wires": [
            [
                "fa70aa0ed315530c"
            ]
        ]
    },
    {
        "id": "57295fd6c61cede7",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Green Button",
        "func": "if (msg.payload == \"1\"){\n    msg.payload = {};\n    msg.background = \"green\";\n    node.send(msg);\n}\nif (msg.payload.jde__status == \"SUCCESS\"){\n    msg.payload = {};\n    msg.background = \"grey\";\n    node.send(msg);\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 280,
        "wires": [
            [
                "6cb9d899f3d86252"
            ]
        ]
    },
    {
        "id": "f46ead446e85ca3c",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "113c3a8b49c860dd",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Downtime Code",
        "label": "<font color={{msg.color}} size=4%>{{topic}}",
        "format": "<font color={{msg.color}} size=4%>{{payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2280,
        "y": 880,
        "wires": []
    },
    {
        "id": "fa70aa0ed315530c",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "",
        "func": "const time = new Date();\nconst options = {hour12:false, timestyle:\"short\", year:\"numeric\",month:\"short\",day:\"2-digit\"};\n\nmsg.time = time.toLocaleTimeString('en-US', options);\n\nmsg.color = \"firebrick\";\n\nmsg.payload.down = 0;\nflow.set(\"DT\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 880,
        "wires": [
            [
                "f46ead446e85ca3c",
                "447bf382c2c8c4f0",
                "d16645eaa07a0601",
                "1a9a1167dbc1839b"
            ]
        ]
    },
    {
        "id": "447bf382c2c8c4f0",
        "type": "trigger",
        "z": "908514b9df30460d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1980,
        "y": 880,
        "wires": [
            [
                "a34e81fd7b53b4c0"
            ]
        ]
    },
    {
        "id": "a34e81fd7b53b4c0",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Text Color",
        "func": "msg.color = \"gray\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 880,
        "wires": [
            [
                "f46ead446e85ca3c"
            ]
        ]
    },
    {
        "id": "c7f25766a576bf82",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2420,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "40375296a9c9b675",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2460,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "90fe7138747194ba",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2500,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "a7e8ae612178521e",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "4",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2540,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "fd5a03bce908c0ce",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "5",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2580,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "9e78a07e67d49985",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "6",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2620,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "0a27f06869c19c74",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "7",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "7",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2660,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "e5d072251bb72f88",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "8",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "8",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2700,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "933399b7050d8753",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "9",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "9",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2740,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "9105593296c4f632",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "0",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2780,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "ebd720bd9dc051ea",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 2860,
        "wires": [
            [
                "ec64fa8c8f575888"
            ]
        ]
    },
    {
        "id": "ec64fa8c8f575888",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set msg.complete",
        "func": "msg.complete = true\nmsg.payload = ''\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2820,
        "wires": [
            [
                "38d987bfa6f2b0cf",
                "98869f53382748b2",
                "3ce48430556efa20"
            ]
        ]
    },
    {
        "id": "3ce48430556efa20",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "UI",
        "func": "\nmsg.payload = {\"group\":{\"hide\":[\"1CH052_Pin\"],\"show\":[\"1CH052_DSI\"]}};\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2820,
        "wires": [
            [
                "b2566894a9da2518"
            ]
        ]
    },
    {
        "id": "b2566894a9da2518",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "change",
        "x": 740,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "c9b56151abc94213",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Pin",
        "func": "if (flow.get(\"Add\")==true) {\n    flow.set(\"AddNum\",msg.payload);\n    msg.payload = Number (flow.get(\"AddNum\"));\n    return [msg,null,null]\n} else if (flow.get(\"Scrap\")==false) {\n    flow.set(\"EmployeeNumber\",msg.payload);\n    msg.payload = flow.get(\"EmployeeNumber\");\n    return [null,msg,null]\n} else {\n    msg.payload = Number (msg.payload);\n    return [null,null,msg]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2600,
        "wires": [
            [
                "f1b0e4caf63d2ddd"
            ],
            [
                "e6fe837c94becfb9"
            ],
            [
                "2e4377d83d735eed"
            ]
        ],
        "outputLabels": [
            "AddNum",
            "Emp",
            ""
        ]
    },
    {
        "id": "e6fe837c94becfb9",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "EmpNum",
        "mode": "link",
        "links": [
            "e8429e2096514f4d",
            "ea7936e6be436111"
        ],
        "x": 795,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e8429e2096514f4d",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "link in 1",
        "links": [
            "8a75f28a7f992c73",
            "e6fe837c94becfb9"
        ],
        "x": 1745,
        "y": 2760,
        "wires": [
            [
                "db37ddf139086377"
            ]
        ]
    },
    {
        "id": "62d8a07e5312e01b",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "PRO_ORC_GetMachineRatesInfo",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PRO_ORC_GetMachineRatesInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2450,
        "y": 200,
        "wires": [
            [
                "33f3414f34afbc88",
                "4746215bf0d45211",
                "741fe15993a2ac68",
                "dcec780e7a5dcca1"
            ]
        ]
    },
    {
        "id": "4746215bf0d45211",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "STD Rate",
        "format": "{{msg.payload.STDPPM}}",
        "layout": "row-spread",
        "className": "",
        "x": 2700,
        "y": 80,
        "wires": []
    },
    {
        "id": "33f3414f34afbc88",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "5263fb7040c01dff",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "MAX Rate",
        "format": "{{msg.payload.MAXPPM}}",
        "layout": "row-spread",
        "className": "",
        "x": 2700,
        "y": 40,
        "wires": []
    },
    {
        "id": "8c71d52d428fef4b",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "gateway",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1300,
        "y": 780,
        "wires": []
    },
    {
        "id": "98869f53382748b2",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "EmployeeNumberInput",
        "func": "var msgElt = {};\n\nif (msg.complete == true){\n    msg.payload = flow.get(\"Pass\")\n    flow.set(\"Pass\",\"\")\n    msgElt.payload = \"\"\n    return [msg,msgElt];\n} else if (msg.payload == \"clear\"){\n    pass = \"\";\n    flow.set(\"Pass\",pass);\n    msgElt = {};\n    msgElt.payload = pass;\n    return [null,msgElt]\n} else {\n    pass = flow.get(\"Pass\");\n    pass = pass + msg.payload;\n    flow.set(\"Pass\",pass);\n    msgElt = {};\n    msgElt.payload = pass;\n    return [null,msgElt]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"Pass\",\"\")",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2600,
        "wires": [
            [
                "c9b56151abc94213"
            ],
            [
                "b016afc561885e5f"
            ]
        ]
    },
    {
        "id": "b016afc561885e5f",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "2b495685df9a1c53",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Number Field",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 660,
        "y": 2660,
        "wires": []
    },
    {
        "id": "c3343fedc27b2ebf",
        "type": "change",
        "z": "908514b9df30460d",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Machine_Status",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.time",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 920,
        "wires": [
            [
                "6e060c2e816806f3"
            ]
        ]
    },
    {
        "id": "6e060c2e816806f3",
        "type": "mqtt out",
        "z": "908514b9df30460d",
        "name": "CH052",
        "topic": "CH052",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "06aae9471921be4e",
        "x": 2350,
        "y": 920,
        "wires": []
    },
    {
        "id": "d16645eaa07a0601",
        "type": "change",
        "z": "908514b9df30460d",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Unknown",
                "fromt": "str",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Production",
                "fromt": "str",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Set Up",
                "fromt": "str",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ToolChange",
                "fromt": "str",
                "to": "8",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Changeover",
                "fromt": "str",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Maintenance",
                "fromt": "str",
                "to": "5",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Troubleshooting",
                "fromt": "str",
                "to": "7",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NotScheduled",
                "fromt": "str",
                "to": "11",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OutofSpec",
                "fromt": "str",
                "to": "13",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "QualityHold",
                "fromt": "str",
                "to": "14",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Stopped",
                "fromt": "str",
                "to": "10",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Other",
                "fromt": "str",
                "to": "10",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "str",
                "to": "10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 920,
        "wires": [
            [
                "c3343fedc27b2ebf"
            ]
        ]
    },
    {
        "id": "13f3e9390a444fe5",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "2b495685df9a1c53",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "clear",
        "payloadType": "str",
        "topic": "clear",
        "topicType": "msg",
        "x": 130,
        "y": 2820,
        "wires": [
            [
                "98869f53382748b2"
            ]
        ]
    },
    {
        "id": "98bf4015eaf044ed",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "Run Screen",
        "links": [
            "479c91350bab6b49",
            "efdbb3b76d7386c1",
            "5b880c3c1aac387f",
            "47e0fadaa601b53a"
        ],
        "x": 25,
        "y": 120,
        "wires": [
            [
                "174c1a687c4f1e82"
            ]
        ]
    },
    {
        "id": "479c91350bab6b49",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "",
        "mode": "link",
        "links": [
            "98bf4015eaf044ed"
        ],
        "x": 1815,
        "y": 400,
        "wires": []
    },
    {
        "id": "c58842d82630bf0a",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "7fc0a0f3f610fe34",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last Log by:",
        "format": "{{msg.payload.EmployeeNumber}}",
        "layout": "row-spread",
        "className": "",
        "x": 2090,
        "y": 2800,
        "wires": []
    },
    {
        "id": "62a667a66f7ef0ac",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "link in 2",
        "links": [
            "7ebc9a11086a6d41"
        ],
        "x": 35,
        "y": 80,
        "wires": [
            [
                "e459bddb36577f7d"
            ]
        ]
    },
    {
        "id": "ac7560118e7e42a5",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "MLS Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.jde__status",
        "targetType": "msg",
        "statusVal": "payload.jde__status",
        "statusType": "auto",
        "x": 990,
        "y": 240,
        "wires": []
    },
    {
        "id": "984d2fa097d6de2e",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "4476f1849a32a798",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Notif Text",
        "label": "WO#: ",
        "format": "{{msg.payload.WorkOrderNo}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f75b7aaaac34f530",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "Confirm",
        "group": "4476f1849a32a798",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "confirm",
        "topicType": "msg",
        "x": 380,
        "y": 1440,
        "wires": [
            [
                "68767ffec53b16d1"
            ]
        ]
    },
    {
        "id": "a9c5ce96bf26342d",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "Decline",
        "group": "4476f1849a32a798",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Decline",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 1480,
        "wires": [
            [
                "fb8bebf25c90f9ce"
            ]
        ]
    },
    {
        "id": "a56e490319c75d8c",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Run Out",
        "func": "msg.payload = (flow.get(\"RunOutQty\"));\nmsg.payload = Number (msg.payload.replace(\",\",\"\"));\n\nflow.set(\"Add\",true);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1640,
        "wires": [
            [
                "a75d3775bb96dd77"
            ]
        ]
    },
    {
        "id": "58e74c253dff2546",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set msg",
        "func": "msg = {};\nmsg.payload = {};\nmsg.payload.WorkOrderNo = flow.get(\"WO#\");\nmsg.payload.Quantity = flow.get(\"Good_Count\");\nmsg.payload.Scrap = 0;\nmsg.payload.Part = flow.get(\"PartNum\");\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1320,
        "wires": [
            [
                "984d2fa097d6de2e",
                "214dd57de94e9451",
                "b2b7cb3d1290d50d"
            ]
        ]
    },
    {
        "id": "214dd57de94e9451",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "4476f1849a32a798",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Notif Text",
        "label": "Part: ",
        "format": "{{msg.payload.Part}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1360,
        "wires": []
    },
    {
        "id": "b2b7cb3d1290d50d",
        "type": "ui_text",
        "z": "908514b9df30460d",
        "group": "4476f1849a32a798",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Notif Text",
        "label": "Good Count: ",
        "format": "{{msg.payload.Quantity}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1400,
        "wires": []
    },
    {
        "id": "68767ffec53b16d1",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Confirm",
        "func": "msg.payload = {\"group\":{\"show\":[\"1CH052_Machine\"],\"hide\":[\"1CH052_Notif\"]}};\nflow.set(\"OpStat\",30);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1440,
        "wires": [
            [
                "a48bf91fb2735113",
                "d9eba8aaa8436791",
                "f19e694f432f4a04",
                "db0c1871a975f337"
            ]
        ]
    },
    {
        "id": "a48bf91fb2735113",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "change",
        "x": 800,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "c76085ba3de50478",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "WOCompIn",
        "links": [
            "14458b6ae5cc7553",
            "c307117956141bc1"
        ],
        "x": 125,
        "y": 1320,
        "wires": [
            [
                "58e74c253dff2546"
            ]
        ]
    },
    {
        "id": "d9eba8aaa8436791",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "WOCompOut",
        "mode": "link",
        "links": [
            "54fd1331c1616c23",
            "290ea1690236a7bb"
        ],
        "x": 655,
        "y": 1460,
        "wires": []
    },
    {
        "id": "54fd1331c1616c23",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "WOCompIn2",
        "links": [
            "d9eba8aaa8436791"
        ],
        "x": 125,
        "y": 1240,
        "wires": [
            [
                "4a84e8f275e5be6e"
            ]
        ]
    },
    {
        "id": "08590566bd7679d6",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "WONewQtyOut",
        "mode": "link",
        "links": [
            "a59e0f028ca6d20e",
            "a622f0a1516f953e"
        ],
        "x": 1495,
        "y": 1640,
        "wires": []
    },
    {
        "id": "b5ff88a04e4f7d14",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "WOResetOut",
        "mode": "link",
        "links": [
            "6d84efe607d29e5e",
            "f6ab20ed124adb40",
            "a0d995831e438941"
        ],
        "x": 915,
        "y": 1240,
        "wires": []
    },
    {
        "id": "6d84efe607d29e5e",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "WOResetIn",
        "links": [
            "b5ff88a04e4f7d14"
        ],
        "x": 2565,
        "y": 280,
        "wires": [
            [
                "9a05aa92053f9faa"
            ]
        ]
    },
    {
        "id": "8a75f28a7f992c73",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "WOStatOut",
        "mode": "link",
        "links": [
            "e8429e2096514f4d"
        ],
        "x": 305,
        "y": 1260,
        "wires": []
    },
    {
        "id": "021e3786b0c3b59e",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "a58a958ac73f6b30",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Machine Selection",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "className": "",
        "icon": "",
        "payload": "MachineSelection",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "77c88c27782e8738"
            ]
        ]
    },
    {
        "id": "d0c24d2a84ebd80d",
        "type": "mqtt out",
        "z": "908514b9df30460d",
        "name": "CH052",
        "topic": "CH052",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "06aae9471921be4e",
        "x": 3090,
        "y": 80,
        "wires": []
    },
    {
        "id": "44000e2cdbabdc6e",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Rates",
        "func": "flow.set(\"STDRate\",msg.payload.STDPPM);\nflow.set(\"MAXRate\",msg.payload.MAXPPM);\n\nmsg = {};\nmsg.payload = {};\nmsg.payload.Target_Run_Rate = flow.get(\"STDRate\");\nmsg.payload.Max_Rate = flow.get(\"MAXRate\");\nmsg.payload.Part_Number = flow.get(\"PartNum\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 80,
        "wires": [
            [
                "d0c24d2a84ebd80d",
                "741fe15993a2ac68",
                "dce0eb1c6f551635"
            ]
        ]
    },
    {
        "id": "0824c8b7d0200dff",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "USE THIS ONE - Send Machine Status",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://dv-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_LoadWOTimeLoginInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 3150,
        "y": 2820,
        "wires": [
            [
                "7cf3288576b39256",
                "9c66d81432cd853c"
            ]
        ]
    },
    {
        "id": "678974c7f7d6eb37",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "5263fb7040c01dff",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Enter DownTime",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1320,
        "y": 840,
        "wires": [
            [
                "a54a16cffac55f71"
            ]
        ]
    },
    {
        "id": "a54a16cffac55f71",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "DT Entry Pop-Up ",
        "func": "msg.payload = {};\nmsg.payload.down = 3;\nmsg.topic = \"show\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 840,
        "wires": [
            [
                "3177b6f415836e3e"
            ]
        ]
    },
    {
        "id": "3f52f8b328fc18c5",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "113c3a8b49c860dd",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "One Time Add ",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1700,
        "wires": [
            [
                "24f4673884700a76"
            ]
        ]
    },
    {
        "id": "24f4673884700a76",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Show Pin",
        "func": "flow.set(\"Add\",true);\nmsg.payload = {\"group\":{\"show\":[\"1CH052_Pin\"],\"hide\":[\"1CH052_DSI\"]}};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1700,
        "wires": [
            [
                "a05843e32c798ec4"
            ]
        ]
    },
    {
        "id": "a05843e32c798ec4",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "change",
        "x": 920,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "f1b0e4caf63d2ddd",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "AddNum",
        "mode": "link",
        "links": [
            "63990f63eaed19e8"
        ],
        "x": 765,
        "y": 2560,
        "wires": []
    },
    {
        "id": "63990f63eaed19e8",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "link in 4",
        "links": [
            "2e4377d83d735eed",
            "f1b0e4caf63d2ddd"
        ],
        "x": 1125,
        "y": 1680,
        "wires": [
            [
                "a75d3775bb96dd77"
            ]
        ]
    },
    {
        "id": "c81759c1715759ff",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 3080,
        "wires": [
            [
                "54419573d39d7440"
            ]
        ]
    },
    {
        "id": "54419573d39d7440",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Get Flow Variables",
        "func": "msgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = flow.keys();\n\nvar len = msgElt.payload.length;\nvar i = 0;\n\nmsg.payload = {};\n\nfor (i=0;i<len;i++) {\n    a = msgElt.payload[i];\n    msg.payload[a] = flow.get(a);\n}\n\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n\nmsg = {};\nmsg.payload = {};\nmsg.payload[\"sent\"] = 1;\n\n\nreturn [null,msg];",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = flow.keys();\n\nvar len = msgElt.payload.length;\nvar i = 0;\n\nmsg = {};\nmsg.payload = {};\n\nfor (i=0;i<len;i++) {\n    a = msgElt.payload[i];\n    msg.payload[a] = flow.get(a);\n    flow.set(a,flow.get(a),\"file\");\n}\nmsg.payload[\"sent\"] = 1;\nreturn [msg,null];",
        "libs": [],
        "x": 650,
        "y": 3080,
        "wires": [
            [
                "a5eabb9d8b8ebc4c"
            ],
            []
        ],
        "inputLabels": [
            "Triggered"
        ],
        "outputLabels": [
            "On Message and On Stop",
            "On Start"
        ]
    },
    {
        "id": "a5eabb9d8b8ebc4c",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "Flow variables",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 860,
        "y": 3080,
        "wires": []
    },
    {
        "id": "5d5bde7a096a037a",
        "type": "file in",
        "z": "908514b9df30460d",
        "name": "Read Context",
        "filename": "/data/context/4a44a7a1246af426/flow.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 340,
        "y": 3120,
        "wires": [
            [
                "3a811c2d87acc7be"
            ]
        ]
    },
    {
        "id": "73ce40fc85128560",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Get Flow Variables",
        "func": "msgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = Object.keys(msg.payload);\n\nvar len = msgElt.payload.length;\nvar i = 0;\n\nmsg.payload = {};\n\nfor (i=0;i<len;i++) {\n    a = msgElt.payload[i];\n    msg.payload[a] = flow.get(a,\"file\");\n    flow.set(a,msg.payload[a]);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 3120,
        "wires": [
            [
                "a5eabb9d8b8ebc4c"
            ]
        ]
    },
    {
        "id": "3a811c2d87acc7be",
        "type": "json",
        "z": "908514b9df30460d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 490,
        "y": 3120,
        "wires": [
            [
                "73ce40fc85128560"
            ]
        ]
    },
    {
        "id": "432876692fc72fe6",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 3120,
        "wires": [
            [
                "5d5bde7a096a037a"
            ]
        ]
    },
    {
        "id": "ff3b97b67c2af307",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Total_Count",
        "func": "flow.set(\"Total_Count\", msg.payload.value)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 900,
        "wires": [
            [
                "b9c6fd37ceda555d",
                "612631354411da28",
                "007ad645447beffc"
            ]
        ]
    },
    {
        "id": "99187ea772453727",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "Value",
        "property": "payload.attribute",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Good_Count",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Machine_Status",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Current_Run_Rate",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Total_Count",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Run_Register",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 690,
        "y": 840,
        "wires": [
            [
                "b932ae19bac7b0b6"
            ],
            [
                "408b22bed7fc10ab",
                "ba5ca7c693ef833d"
            ],
            [
                "7a823d67f81a4d88"
            ],
            [
                "ff3b97b67c2af307"
            ],
            [
                "6704b9f89cd96943"
            ]
        ]
    },
    {
        "id": "ba5ca7c693ef833d",
        "type": "change",
        "z": "908514b9df30460d",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.value",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 740,
        "wires": [
            [
                "52d62b719c63b591"
            ]
        ]
    },
    {
        "id": "69d29382375e15d9",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "a7d5813ebcf0e340",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Report Scrap",
        "tooltip": "",
        "color": "white",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1760,
        "wires": [
            [
                "3733f20cbe5fa7a3"
            ]
        ]
    },
    {
        "id": "3733f20cbe5fa7a3",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Show Pin",
        "func": "flow.set(\"Scrap\",true);\nmsg.payload = {\"group\":{\"show\":[\"1CH052_Pin\"],\"hide\":[\"1CH052_DSI\"]}};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1760,
        "wires": [
            [
                "397303d75be8d3ed"
            ]
        ]
    },
    {
        "id": "397303d75be8d3ed",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "change",
        "x": 920,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "2e4377d83d735eed",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "Scrap",
        "mode": "link",
        "links": [
            "63990f63eaed19e8"
        ],
        "x": 805,
        "y": 2640,
        "wires": []
    },
    {
        "id": "38417e97f07ae8c4",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 780,
        "wires": []
    },
    {
        "id": "fa3daeef3091d134",
        "type": "change",
        "z": "908514b9df30460d",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "save",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 320,
        "wires": [
            [
                "3cd9939d282f8a1a"
            ]
        ]
    },
    {
        "id": "7ea6d552ee9d1677",
        "type": "subflow:c59719cd71299db1",
        "z": "908514b9df30460d",
        "name": "",
        "x": 1690,
        "y": 380,
        "wires": [
            [
                "479c91350bab6b49",
                "fa3daeef3091d134"
            ],
            []
        ]
    },
    {
        "id": "fb8bebf25c90f9ce",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Confirm",
        "func": "msg.payload = {\"group\":{\"show\":[\"1CH052_Machine\"],\"hide\":[\"1CH052_Notif\"]}};\nflow.set(\"OpStat\",30);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1480,
        "wires": [
            [
                "9c177c974a7a2e61"
            ]
        ]
    },
    {
        "id": "9c177c974a7a2e61",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "change",
        "x": 700,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "544b9e6c7eac9434",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 860,
        "wires": []
    },
    {
        "id": "f47b58d69f0b7b9b",
        "type": "subflow:ba7038a52b6c04be",
        "z": "908514b9df30460d",
        "name": "",
        "x": 640,
        "y": 2740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "38d987bfa6f2b0cf",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 1",
        "func": "msg.payload = {};\nmsg.payload.BadgeNumber = flow.get(\"Pass\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "6af017dcaa96667e",
        "type": "ui_switch",
        "z": "908514b9df30460d",
        "name": "",
        "label": "<size=5%>Labor ",
        "tooltip": "",
        "group": "7fc0a0f3f610fe34",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-2x fa-toggle-on ",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-2x fa-toggle-off",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "27e2dc3fb74773be",
                "0988dee59fd37a15"
            ]
        ]
    },
    {
        "id": "27e2dc3fb74773be",
        "type": "subflow:73c9668643fa63b3",
        "z": "908514b9df30460d",
        "d": true,
        "name": "Labor message",
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "efdbb3b76d7386c1"
            ],
            [
                "6af017dcaa96667e"
            ]
        ]
    },
    {
        "id": "efdbb3b76d7386c1",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "f4e20afdebd56ef7",
            "98bf4015eaf044ed"
        ],
        "x": 415,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f5a12d090b511eae",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1000,
        "y": 180,
        "wires": []
    },
    {
        "id": "527e320b6ab2f080",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3060,
        "y": 200,
        "wires": []
    },
    {
        "id": "741fe15993a2ac68",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2980,
        "y": 20,
        "wires": []
    },
    {
        "id": "847bedc6c269fc4c",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 1700,
        "wires": []
    },
    {
        "id": "e78b8f23688ee854",
        "type": "comment",
        "z": "908514b9df30460d",
        "name": "Confirm Tab",
        "info": "",
        "x": 90,
        "y": 1280,
        "wires": []
    },
    {
        "id": "70d805945122924b",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1020,
        "y": 1400,
        "wires": []
    },
    {
        "id": "59b827d6ad7fd8f9",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 660,
        "y": 280,
        "wires": []
    },
    {
        "id": "6f746bed0e9563fa",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 160,
        "wires": []
    },
    {
        "id": "fbcca7a537b9f29a",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1220,
        "y": 300,
        "wires": []
    },
    {
        "id": "9df2e9cb25a00521",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "e49a4f49b2eb392d",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 58",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1240,
        "y": 260,
        "wires": []
    },
    {
        "id": "95ce25bfa70cfc3d",
        "type": "subflow:d440ce3753a1d478",
        "z": "908514b9df30460d",
        "name": "API call messages",
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "e49a4f49b2eb392d"
            ],
            [
                "fbcca7a537b9f29a"
            ]
        ]
    },
    {
        "id": "f19e694f432f4a04",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set ShortOrder",
        "func": "if (flow.get('Good_Count') < flow.get('QTYShrink')) {\n    flow.set('ShortOrder', 1);\n    msg.payload.Machine = flow.get(\"Machine\");\n    msg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\n    msg.payload.Good = flow.get(\"Good_Count\");\n    msg.payload.QTY = flow.get(\"QTYShrink\");\n    msg.payload.WorkOrderNo = flow.get(\"WO#\");\n    msg.payload.QTYRemain = flow.get (\"QTYShrink\") - flow.get(\"Good_Count\");\n    msg.payload.Material = flow.get(\"Material\");\n    \n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1400,
        "wires": [
            [
                "7dc08a50e61efa49"
            ]
        ]
    },
    {
        "id": "7dc08a50e61efa49",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Header",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1380,
        "wires": [
            [
                "2686d63cbd8ba0f0",
                "70d805945122924b"
            ]
        ]
    },
    {
        "id": "2686d63cbd8ba0f0",
        "type": "template",
        "z": "908514b9df30460d",
        "name": "Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n   \"title\" : \"SHORT ORDER - NEW WO CREATION REQUIRED\",\n  \"text\": \"Machine: {{payload.Machine}},\n           Branch Plant: {{payload.Branch_Plant}}, \n           WO#: {{payload.WorkOrderNo}},\n           Good_Count: {{payload.Good}}, \n\t\t   QTY: {{payload.QTY}},\n\t\t   QTYRemain: {{payload.QTYRemain}},\n\t\t   Material: {{payload.Material}}\"\n  \n  \n    }",
        "output": "str",
        "x": 860,
        "y": 1380,
        "wires": [
            [
                "7a48a72ff69416fa",
                "70d805945122924b"
            ]
        ]
    },
    {
        "id": "7a48a72ff69416fa",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://pemnetsp.webhook.office.com/webhookb2/1736c664-6bed-4926-9223-2ae8b8f04734@14e34c25-dbe7-4374-a026-99d90b7392f3/IncomingWebhook/6656bdb939ec4a8b8a43dae29dd08cf7/4242fef8-d597-42c6-90e7-b0bfbc97f59c",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 1360,
        "wires": [
            [
                "70d805945122924b"
            ]
        ]
    },
    {
        "id": "8bd5ba04c78304e0",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "\nlet a = 0;\nlet b = \"CH.CH001.CH052.WO_Comp_DINT\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 40,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "f247b5f06f1351c1",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "let a = 2;\nlet b = \"CH.CH001.CH052.Run_Register\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 60,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "c6993881a6b8f3cb",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "let a = flow.get(\"WO#\");\nlet b = \"CH.CH001.CH052.Work_Order_Number\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 100,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "a98dfbcdcd3ced93",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "let a = flow.get(\"QTYShrink\");\nlet b = \"CH.CH001.CH052.Target_WO_Quantity\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3360,
        "y": 140,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "0641ea45eb5a4901",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "let a = flow.get(\"PartNum\");\nlet b = \"CH.CH001.CH052.Part_Number\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3380,
        "y": 180,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "184e90f339e3cde0",
        "type": "mqtt out",
        "z": "908514b9df30460d",
        "name": "",
        "topic": "iotgateway/write",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "06aae9471921be4e",
        "x": 3720,
        "y": 80,
        "wires": []
    },
    {
        "id": "329723a3cd8a7a52",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4000,
        "y": 220,
        "wires": []
    },
    {
        "id": "0c11170984a7ac21",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "On complete",
        "props": [
            {
                "p": "payload.value",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2490,
        "y": 60,
        "wires": [
            [
                "8bd5ba04c78304e0"
            ]
        ]
    },
    {
        "id": "755ae19ebcdb5083",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "change",
        "x": 560,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "0988dee59fd37a15",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Set Labor",
        "func": "flow.set(\"Labor\",msg.payload);\nif (msg.payload == true){\n    msg.payload = {\"group\":{\"show\":[\"1CH052_Pin\"],\"hide\":[\"1CH052_DSI\"]}};\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "755ae19ebcdb5083"
            ]
        ]
    },
    {
        "id": "24b660ffb9d51b15",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "On complete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 3510,
        "y": 320,
        "wires": [
            [
                "dce0eb1c6f551635"
            ]
        ]
    },
    {
        "id": "dce0eb1c6f551635",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "let a = flow.get(\"STDRate\");\nlet b = \"CH.CH001.CH052.Target_Run_Rate\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 320,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "e9d8ba65a8b43c23",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "\nlet a = flow.get(\"EmployeeNumber\");\nlet b = \"CH.CH001.CH052.Operator_Badge_Number\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 360,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "2033aab6c32957cd",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "On complete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 3510,
        "y": 360,
        "wires": [
            [
                "e9d8ba65a8b43c23"
            ]
        ]
    },
    {
        "id": "fe64c67dfe372baa",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "494d49affe18dd2d"
            ],
            [
                "a43a14f43d677e6e"
            ]
        ]
    },
    {
        "id": "494d49affe18dd2d",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 20",
        "func": "if (msg.payload.status == \"SUCCESS\") {\n  let timestamp = Date.now();\n    flow.set(\"storedData\", {\n    timestamp: timestamp,\n    data: msg.payload\n  });\n  \n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 580,
        "wires": [
            [
                "511f39c7ce8b3de0"
            ]
        ]
    },
    {
        "id": "a43a14f43d677e6e",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 21",
        "func": "if (msg.payload.status != \"SUCCESS\") {\n  let storedData = flow.get(\"storedData\") || {};\n  storedData.failedTimestamp = Date.now();\n  flow.set(\"storedData\", storedData);\n  return {\n    error: msg.payload.status,\n    payload: storedData.data\n  };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "d5b4876746019742"
            ]
        ]
    },
    {
        "id": "d5b4876746019742",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 22",
        "func": "let newData = msg.payload;\nlet storedData = flow.get(\"storedData\") || {};\nlet timestamp = Date.now();\nlet combinedData = {\n  timestamp: timestamp,\n  data: newData\n};\nif (storedData.data) {\n  combinedData.storedData = storedData;\n}\nreturn {\n  payload: JSON.stringify(combinedData)\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 640,
        "wires": [
            [
                "c62961acc25e1e95"
            ]
        ]
    },
    {
        "id": "c62961acc25e1e95",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 23",
        "func": "msg.payload = {};\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = msg.payload;\nmsgElt.payload = flow.keys();\nvar len = msgElt.payload.length;\nvar i = 0;\nfor (i=0;i<len;i++) {\n a = msgElt.payload[i];\n msg.payload[a] = flow.get(a);\n}\nreturn [msg,null];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 640,
        "wires": [
            [
                "ba0fde777fb131e5"
            ]
        ]
    },
    {
        "id": "511f39c7ce8b3de0",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 840,
        "y": 580,
        "wires": []
    },
    {
        "id": "ba0fde777fb131e5",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1100,
        "y": 580,
        "wires": []
    },
    {
        "id": "9c66d81432cd853c",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SUCCESS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3010,
        "y": 2900,
        "wires": [
            [
                "ecc58e44fe141167"
            ],
            [
                "e41d65d99d54af61"
            ]
        ]
    },
    {
        "id": "ecc58e44fe141167",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 24",
        "func": "if (msg.payload.status == \"SUCCESS\") {\n  let timestamp = Date.now();\n    flow.set(\"storedData\", {\n    timestamp: timestamp,\n    data: msg.payload\n  });\n  \n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3170,
        "y": 2880,
        "wires": [
            [
                "556d5e53168ee46e"
            ]
        ]
    },
    {
        "id": "556d5e53168ee46e",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3320,
        "y": 2880,
        "wires": []
    },
    {
        "id": "e41d65d99d54af61",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 25",
        "func": "if (msg.payload.status != \"SUCCESS\") {\n  let storedData = flow.get(\"storedData\") || {};\n  storedData.failedTimestamp = Date.now();\n  flow.set(\"storedData\", storedData);\n  return {\n    error: msg.payload.status,\n    payload: storedData.data\n  };\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3190,
        "y": 2920,
        "wires": [
            [
                "1aed2d28c5e6468b"
            ]
        ]
    },
    {
        "id": "1aed2d28c5e6468b",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 26",
        "func": "let newData = msg.payload;\nlet storedData = flow.get(\"storedData\") || {};\nlet timestamp = Date.now();\nlet combinedData = {\n  timestamp: timestamp,\n  data: newData\n};\nif (storedData.data) {\n  combinedData.storedData = storedData;\n}\nreturn {\n  payload: JSON.stringify(combinedData)\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3350,
        "y": 2920,
        "wires": [
            [
                "8f559360565a0699"
            ]
        ]
    },
    {
        "id": "8f559360565a0699",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 27",
        "func": "msg.payload = {};\nmsgElt = {};\nmsgElt.payload = {};\nmsgElt.payload = msg.payload;\nmsgElt.payload = flow.keys();\nvar len = msgElt.payload.length;\nvar i = 0;\nfor (i=0;i<len;i++) {\n a = msgElt.payload[i];\n msg.payload[a] = flow.get(a);\n}\nreturn [msg,null];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 2920,
        "wires": [
            [
                "8702b5eba0a9cd7d"
            ]
        ]
    },
    {
        "id": "8702b5eba0a9cd7d",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 3660,
        "y": 2920,
        "wires": []
    },
    {
        "id": "b9c6fd37ceda555d",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 11",
        "func": "if (msg.payload == true) {\n    flow.set(\"LastBinCheckCount\", (flow.get(\"Good_Count\")+flow.get(\"GoodParts\")));\n    flow.set(\"GoodButton\", flow.get(\"GoodButton\")+1);\n}\nlet GoodParts = msg.payload.value - flow.get(\"LastBinCheckCount\")-flow.get(\"ScrapQTYTotal\");\nflow.set(\"GoodParts\", GoodParts);\nmsg.payload.value = flow.get(\"GoodParts\");\nif (msg.payload.value < 0){\n    flow.set(\"LastBinCheckCount\",msg.payload.value);\n    flow.set(\"GoodParts\", 0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1000,
        "wires": [
            [
                "204952a778fadd2c",
                "04321ef921269419",
                "007ad645447beffc"
            ]
        ]
    },
    {
        "id": "04321ef921269419",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "Good Parts",
        "group": "a7d5813ebcf0e340",
        "order": 1,
        "width": 4,
        "height": 2,
        "passthru": false,
        "label": "Good Parts: [{{msg.payload.value}} PCS]",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1220,
        "y": 1100,
        "wires": [
            [
                "b9c6fd37ceda555d",
                "0c36fea19dde99ef"
            ]
        ]
    },
    {
        "id": "204952a778fadd2c",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "Bad Parts",
        "group": "a7d5813ebcf0e340",
        "order": 2,
        "width": 4,
        "height": 2,
        "passthru": false,
        "label": "Bad Parts: [{{msg.payload.value}} PCS]",
        "tooltip": "",
        "color": "",
        "bgcolor": "#871900",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1390,
        "y": 1000,
        "wires": [
            [
                "ce70c3142da81d39"
            ]
        ]
    },
    {
        "id": "ce70c3142da81d39",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 12",
        "func": "if (msg.payload == true) {\n    let goodCount = flow.get(\"Good_Count\");\n    let badCount = flow.get(\"GoodParts\");\n    let ScrapQTY = badCount;\n    flow.set('Scrap', true);\n    flow.set(\"BadButton\", flow.get(\"BadButton\")+1);\n    //flow.set(\"LastBinCheckCount\", (flow.get(\"Good_Count\")+flow.get(\"GoodParts\")));\n    //msg.payload = { ScrapQTY: flow.get(\"ScrapQTYTotal\")};\n    flow.set(\"GoodParts\", 0);\n    msg.payload = ScrapQTY;\n    msg2 = {};\n    msg2.payload = {};\n    msg2.payload.value = flow.get(\"Total_Count\");\n    return [msg,msg2];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 940,
        "wires": [
            [
                "a75d3775bb96dd77",
                "007ad645447beffc"
            ],
            [
                "007ad645447beffc",
                "b9c6fd37ceda555d"
            ]
        ]
    },
    {
        "id": "0c36fea19dde99ef",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "\nlet a = flow.get(\"LastBinCheckCount\");\nlet b = \"CH.CH001.CH052.Good_Count\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 400,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "544cecb834dfeed3",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "\nlet a = flow.get(\"ScrapQTYTotal\");\nlet b = \"CH.CH001.CH052.Scrap_Count\";\n\nmsg.payload = [{\n    \"id\":b,\n    \"v\":a\n    }];\n//msg.topic = \"PLC/write\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3700,
        "y": 440,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "6704b9f89cd96943",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Run_Register",
        "func": "msg.payload.down = 0;\n\nif (flow.get(\"SetUp\")==true){\n    flow.set(\"RunSet\",2);\n    msg.enabled = false;\n    return msg\n} else if ((flow.get(\"SetUp\")==false)&&(msg.payload.value == 0)){\n    msg.payload.down = 3;\n    msg.enabled = true;\n    msg.topic = \"show\";\n    return msg\n}\n// This next piece will make sure that downtime only required if machine was in run\n// If machine was in set up and stopped, no downtime code needed, assuming down for set up still\n\n\n// 0 is stopped, 1 is running, 2 is set up",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 960,
        "wires": [
            [
                "678974c7f7d6eb37",
                "1a9a1167dbc1839b",
                "612631354411da28"
            ]
        ]
    },
    {
        "id": "290ea1690236a7bb",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "link in 5",
        "links": [
            "d9eba8aaa8436791"
        ],
        "x": 3125,
        "y": 20,
        "wires": [
            [
                "8bd5ba04c78304e0",
                "41f4ed37305746b0"
            ]
        ]
    },
    {
        "id": "4529134240a4e49b",
        "type": "ui_button",
        "z": "908514b9df30460d",
        "name": "",
        "group": "5263fb7040c01dff",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Set Up Complete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3550,
        "y": 520,
        "wires": [
            [
                "d352f8287368b9ac",
                "9bda863994e51136"
            ]
        ]
    },
    {
        "id": "d352f8287368b9ac",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "WO Write",
        "func": "//let a = 0;\n//let b = \"CH.CH001.CH052.Run_Register\";\n\n//msg.payload = [{\n//    \"id\":b,\n//    \"v\":a\n//    }];\n//msg.topic = \"PLC/write\";\nflow.set(\"SetUp\",false);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 500,
        "wires": [
            [
                "184e90f339e3cde0",
                "329723a3cd8a7a52"
            ]
        ]
    },
    {
        "id": "ea7936e6be436111",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "link in 6",
        "links": [
            "e6fe837c94becfb9"
        ],
        "x": 3505,
        "y": 400,
        "wires": [
            [
                "e9d8ba65a8b43c23"
            ]
        ]
    },
    {
        "id": "9664fd318fb74902",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 460,
        "wires": []
    },
    {
        "id": "e7be3e7f4ca32107",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Headers",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n\n   };\n\nmsg.payload = {};\nmsg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\nmsg.payload.WorkOrderNo = 2355617;\nmsg.color = \"white\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 580,
        "wires": [
            [
                "bb87deb5a4df0f0a"
            ]
        ]
    },
    {
        "id": "bb87deb5a4df0f0a",
        "type": "http request",
        "z": "908514b9df30460d",
        "name": "GetWOHDRInfo",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://jde5-ais.pemnet.com:63081/jderest/v3/orchestrator/PENN_ORCH_GetWOHDRInfo",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 2460,
        "y": 580,
        "wires": [
            [
                "4215ef71c7746bce"
            ]
        ]
    },
    {
        "id": "4215ef71c7746bce",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 64",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2660,
        "y": 600,
        "wires": []
    },
    {
        "id": "0a17f24988be6d97",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2050,
        "y": 580,
        "wires": [
            [
                "e7be3e7f4ca32107"
            ]
        ]
    },
    {
        "id": "41f4ed37305746b0",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 20,
        "wires": []
    },
    {
        "id": "a622f0a1516f953e",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "link in 7",
        "links": [
            "08590566bd7679d6"
        ],
        "x": 3265,
        "y": 160,
        "wires": [
            [
                "a98dfbcdcd3ced93",
                "1206eadcae6e9571"
            ]
        ]
    },
    {
        "id": "1206eadcae6e9571",
        "type": "trigger",
        "z": "908514b9df30460d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3500,
        "y": 600,
        "wires": [
            [
                "253ceb42bb5238d6"
            ]
        ]
    },
    {
        "id": "253ceb42bb5238d6",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "MSG Pop-Up",
        "func": "if (flow.get(\"AddNum\") == 0 && flow.get(\"ScrapQTY\") == 0){\n    msg.payload = {};\n    msg.payload = 'PLC WO QTY has been updated to: ' + flow.get(\"QTYShrink\") + ' pcs'\n} else if (flow.get(\"ScrapQTY\") == 0) {\n    msg.payload = {};\n    msg.payload = 'PLC WO QTY has been updated by: ' + flow.get(\"AddNum\") + ' pcs'\n} else {\n    msg.payload = {};\n    msg.payload = 'PLC WO QTY has been reduced by: ' + flow.get(\"ScrapQTY\") + ' pcs'   \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 600,
        "wires": [
            [
                "633080665fafac28",
                "869649e9ecedb551"
            ]
        ]
    },
    {
        "id": "633080665fafac28",
        "type": "ui_toast",
        "z": "908514b9df30460d",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Brankamp QTY Update",
        "x": 3850,
        "y": 600,
        "wires": []
    },
    {
        "id": "869649e9ecedb551",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3880,
        "y": 640,
        "wires": []
    },
    {
        "id": "007ad645447beffc",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 1020,
        "wires": []
    },
    {
        "id": "612631354411da28",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 68",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e6dee500307d14a2",
        "type": "ui_template",
        "z": "908514b9df30460d",
        "group": "eafabb231c5c985f",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\nbody.nr-dashboard-theme {\n    font-size: 16x !important;\n}\n.md-toolbar-tools h1 {\n    font-size: 18px !important;\n}\n    .tabulator{\n        font-size:18px;\n    }\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1860,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "edc060a3fcdbd22e",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1590,
        "y": 640,
        "wires": [
            [
                "e5ae5a278519e5bf"
            ]
        ]
    },
    {
        "id": "e5ae5a278519e5bf",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 29",
        "func": "msg = {};\nmsg.payload = {};\nmsg.payload.value = flow.get(\"Total_Count\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 660,
        "wires": [
            [
                "b9c6fd37ceda555d"
            ]
        ]
    },
    {
        "id": "db0c1871a975f337",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 31",
        "func": "msg.payload.Machine = flow.get(\"Machine\");\nmsg.payload.Branch_Plant = flow.get(\"Branch_Plant\");\nmsg.payload.Good = flow.get(\"Good_Count\");\nmsg.payload.QTY = flow.get(\"QTYShrink\");\nmsg.payload.WorkOrderNo = flow.get(\"WO#\");\nmsg.payload.QTYRemain = flow.get (\"QTYShrink\") - flow.get(\"Good_Count\");\nmsg.payload.Material = flow.get(\"Material\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1320,
        "wires": [
            [
                "2be9e330d879328e"
            ]
        ]
    },
    {
        "id": "2be9e330d879328e",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Header",
        "func": "msg.headers = {\n    'Content-Type': 'application/json',\n    'Accept-Language': 'en_US',\n    'accept':'application/json',\n   };\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1320,
        "wires": [
            [
                "932818ca51407679"
            ]
        ]
    },
    {
        "id": "932818ca51407679",
        "type": "template",
        "z": "908514b9df30460d",
        "name": "Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n   \"title\" : \"WO Completed\",\n  \"text\": \"Machine: {{payload.Machine}},\n           Branch Plant: {{payload.Branch_Plant}}, \n           WO#: {{payload.WorkOrderNo}},\n           Good_Count: {{payload.Good}}, \n\t\t   QTY: {{payload.QTY}},\n\t\t   QTYRemain: {{payload.QTYRemain}},\n\t\t   Material: {{payload.Material}}\"\n  \n  \n    }",
        "output": "str",
        "x": 800,
        "y": 1320,
        "wires": [
            [
                "7a48a72ff69416fa"
            ]
        ]
    },
    {
        "id": "cfa39f18294697bb",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "",
        "property": "WO#",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "Indirect",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 1560,
        "wires": [
            [
                "62ce139c6db0437c"
            ]
        ]
    },
    {
        "id": "62ce139c6db0437c",
        "type": "switch",
        "z": "908514b9df30460d",
        "name": "",
        "property": "GoodParts",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 904.8958129882812,
        "y": 1561.1112060546875,
        "wires": [
            [
                "58faa8cdfcff6b9a"
            ],
            [
                "c307117956141bc1",
                "9361added4650c90"
            ]
        ]
    },
    {
        "id": "9361added4650c90",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Confirm",
        "func": "msg.payload = {\"group\":{\"hide\":[\"1CH052_Machine\"],\"show\":[\"1CH052_Notif\"]}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1500,
        "wires": [
            [
                "0e69e4774a0daab5"
            ]
        ]
    },
    {
        "id": "58faa8cdfcff6b9a",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "function 66",
        "func": "msg.payload = \"Please accept/reject final bin count\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1560,
        "wires": [
            [
                "cc45b6b89e4540c1",
                "eb16c92303446f63"
            ]
        ]
    },
    {
        "id": "0e69e4774a0daab5",
        "type": "ui_ui_control",
        "z": "908514b9df30460d",
        "name": "",
        "events": "all",
        "x": 1180,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "c307117956141bc1",
        "type": "link out",
        "z": "908514b9df30460d",
        "name": "WOComp",
        "mode": "link",
        "links": [
            "c76085ba3de50478"
        ],
        "x": 984.8958129882812,
        "y": 1601.1112060546875,
        "wires": []
    },
    {
        "id": "cc45b6b89e4540c1",
        "type": "ui_toast",
        "z": "908514b9df30460d",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1330,
        "y": 1560,
        "wires": []
    },
    {
        "id": "eb16c92303446f63",
        "type": "debug",
        "z": "908514b9df30460d",
        "name": "debug 110",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9bda863994e51136",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Disable",
        "func": "msg.enabled = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 540,
        "wires": [
            [
                "4529134240a4e49b"
            ]
        ]
    },
    {
        "id": "c59a5f54623783c2",
        "type": "function",
        "z": "908514b9df30460d",
        "name": "Enable",
        "func": "msg.enabled = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3340,
        "y": 520,
        "wires": [
            [
                "4529134240a4e49b"
            ]
        ]
    },
    {
        "id": "f6ab20ed124adb40",
        "type": "link in",
        "z": "908514b9df30460d",
        "name": "WOResetIn",
        "links": [
            "b5ff88a04e4f7d14"
        ],
        "x": 3235,
        "y": 520,
        "wires": [
            [
                "c59a5f54623783c2"
            ]
        ]
    },
    {
        "id": "dcec780e7a5dcca1",
        "type": "delay",
        "z": "908514b9df30460d",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2820,
        "y": 80,
        "wires": [
            [
                "44000e2cdbabdc6e"
            ]
        ]
    },
    {
        "id": "52d62b719c63b591",
        "type": "change",
        "z": "908514b9df30460d",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "16",
                "fromt": "str",
                "to": "Waiting",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "15",
                "fromt": "num",
                "to": "Start Up",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "14",
                "fromt": "num",
                "to": "Quality Hold",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "13",
                "fromt": "num",
                "to": "Out of Spec",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "12",
                "fromt": "num",
                "to": "Material Issue",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "11",
                "fromt": "num",
                "to": "Not Scheduled",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "No DT Code",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "No Comms",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Running",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Changeover",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Stopped",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Scheduled Maint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Unplanned Maint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "Operator Maint",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "7",
                "fromt": "num",
                "to": "Troubleshooting",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "8",
                "fromt": "num",
                "to": "Tool Change",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9",
                "fromt": "num",
                "to": "Thread Roller",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 740,
        "wires": [
            [
                "53709c120b8da409",
                "68d535f395329cb1"
            ]
        ]
    },
    {
        "id": "a2c1292c4899f2af",
        "type": "inject",
        "z": "908514b9df30460d",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 770,
        "y": 1160,
        "wires": [
            [
                "b5ff88a04e4f7d14"
            ]
        ],
        "icon": "font-awesome/fa-hand-stop-o"
    },
    {
        "id": "5d8a2d87b50411b7",
        "type": "ui_button",
        "z": "aac053d077e51096",
        "name": "",
        "group": "01af8570d2ee242c",
        "order": 2,
        "width": 3,
        "height": 3,
        "passthru": false,
        "label": "<font size=5% color=\"black\">CH052",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1CH052",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 140,
        "wires": [
            [
                "f515204aa19e7cb7"
            ]
        ]
    },
    {
        "id": "f515204aa19e7cb7",
        "type": "ui_ui_control",
        "z": "aac053d077e51096",
        "name": "",
        "events": "all",
        "x": 610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c117f0cb97dc5c22",
        "type": "ui_button",
        "z": "aac053d077e51096",
        "name": "",
        "group": "01af8570d2ee242c",
        "order": 1,
        "width": 3,
        "height": 3,
        "passthru": false,
        "label": "<font size=5% color=\"black\">CH051",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1CH051",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "f515204aa19e7cb7"
            ]
        ]
    }
]